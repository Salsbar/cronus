#pragma METAINFO("Aaero: I Can't Stop", 1, 0, "Palesius, Parker")
#include <xb1.gph>
#include "../common/ColorLED.gph"

const int32 times[] = {0,59493,59993,60027,60077,60127,60128,60227,60244,60394,60444,60494,61128,61545,61712,61845,61862,61962,62045,62079,62095,62129,62145,62246,62279,62329,62346,62996,63413,63597,63610,63611,63697,63747,63847,63879,63880,63914,63931,63947,63997,64031,64114,64248,64882,65282,65365,65599,65616,65699,65782,65849,65949,66066,66099,66583,66783,66950,67167,67301,67334,67568,67627,67628,67668,67684,67718,67734,67768,67784,67885,67985,68635,69036,69186,69269,69319,69353,69369,69453,69570,69586,69620,69636,69686,69720,69753,69786,69853,70504,70921,71088,71116,71117,71154,71255,71305,71370,71371,71388,71405,71438,71455,71488,71505,71622,71688,71722,72372,72789,72940,72973,73090,73106,73190,73273,73290,73307,73340,73357,73423,73590,73607,74041,74458,74625,74825,75008,75092,75128,75129,75158,75242,75342,75442,75475,76126,76543,76844,76877,76927,76944,77060,77094,77211,77277,77361,77995,78412,78595,78607,78608,78729,78745,78829,78879,78881,78882,78962,78979,79046,79129,79162,79229,79863,80297,80447,80564,80597,80631,80681,80797,80831,80881,80931,81048,81064,81582,81748,81932,82115,82199,82249,82349,82516,82549,82616,82629,82630,82699,82716,82766,82783,82933,82983,83617,84017,84117,84334,84368,84451,84518,84535,84585,84685,84818,84852,85502,85919,86069,86100,86101,86103,86203,86220,86236,86320,86373,86374,86403,86420,86436,86470,86503,86553,86653,86687,86720,87371,87788,87971,88071,88121,88222,88272,88288,88355,88422,88589,88605,88672,89172,89173,89507,90007,90090,90140,90157,90240,90357,90424,90457,90958,90974,91041,91074,91141,91275,91375,91391,91892,91975,92025,92075,92209,92309,92326,92826,92926,92943,93043,93227,93290,93291,93393,93427,93594,93694,93861,93977,94111,94211,94711,94795,94828,94895,94928,95078,95145,95662,95796,95812,95963,96063,96079,96597,96697,96747,96880,96980,97064,97097,97147,97231,97347,97381,97414,97509,97510,97631,97681,97764,97948,97965,98448,98532,98649,98765,98866,98882,99351,99352,99383,99384,99385,99499,99516,99633,99750,99816,99833,100334,100417,100534,100684,100794,100795,100817,100884,100901,101034,101218,101368,101385,101485,101635,101702,102174,102175,102202,102203,102204,102302,102336,102436,102553,102619,102636,103153,103337,103387,103570,103587,104087,104188,104271,104388,104471,104655,104805,104972,104988,105005,105505,105506,149483,149983,150067,150125,150126,150167,150184,150234,150267,150367,150434,151201,151335,151385,151568,151835,151869,151952,152019,152035,152102,152186,152319,153070,153253,153287,153528,153529,153720,153754,153820,153854,153875,153876,153937,153971,154037,154121,154154,154188,154938,155055,155088,155138,155556,155622,155656,155689,155806,155822,155906,155989,156073,156573,156673,156707,156857,157040,157107,157191,157224,157241,157341,157541,157585,157586,157691,157724,157875,157925,157941,158575,158592,158892,159259,159393,159459,159476,159560,159593,159676,159793,159810,160444,160460,160761,161155,161156,161245,161278,161339,161340,161411,161428,161528,161678,161695,162329,162346,162663,162930,163113,163146,163280,163297,163363,163397,163497,163564,164064,164147,164214,164431,164548,164715,164798,164965,165032,165086,165087,165132,165148,165232,165299,165415,165465,165749,165766,166383,166391,166392,166400,166617,166667,166783,166850,166900,167017,167100,167284,167334,167601,167606,167607,167618,168235,168252,168485,168569,168652,168697,168698,168702,168769,168836,168837,168886,168986,169119,169169,169186,169453,169469,170103,170120,170370,170420,170521,170587,170654,170787,170871,171038,171088,171572,171622,171805,172039,172189,172222,172389,172539,172585,172586,172673,172689,172723,172756,172923,172940,173190,173207,173841,173857,174107,174224,174258,174391,174541,174558,174608,174641,174775,174825,175058,175063,175064,175075,175642,175659,175876,175893,175909,175959,176248,176249,176276,176326,176343,176359,176362,176363,176376,176393,176409,176426,176476,176510,176560,176626,176810,176827,177577,177585,177586,177594,177844,177944,178044,178111,178128,178194,178311,178395,178578,178695,178862,179145,179362,179396,179496,179980,180013,180063,180109,180110,180146,180180,180196,180213,180313,180397,180413,180931,181197,181298,181331,181364,181431,181815,181848,181932,181948,182032,182048,182098,182115,182282,182705,182706,182749,182899,182900,183049,183199,183250,183466,183519,183520,183733,183817,183854,183855,183867,183917,183950,184034,184167,184651,184935,185035,185068,185118,185302,185552,185602,185635,185669,185769,185802,185835,185852,185936,186019,186036,186533,186534,186553,186554,186555,186653,186686,186853,187103,187254,187304,187370,187554,187608,187609,187671,187687,187771,187871,187921,188421,188688,188705,188872,189306,189356,189422,189522,189539,189623,189756,189789,190210,190211,190273,190557,190557,190558,190574,190740,191008,191009,191041,191174,191224,191308,191357,191358,191391,191441,191491,191558,191658,191675,192192,192442,192542,192576,192626,192859,193026,193076,193093,193543,194027,194485,194486,194728,194911,195411,195412};
const int angles[] = {-1,297,297,315,328,359,0,61,78,135,160,180,177,120,173,222,240,203,151,130,114,98,84,49,34,11,0,4,62,4,0,359,331,300,340,359,0,20,26,50,76,97,129,180,176,122,139,222,240,210,161,110,63,18,0,4,78,127,188,232,250,326,359,0,22,42,60,76,90,102,136,180,176,118,162,193,210,226,241,209,142,121,104,90,72,56,47,32,1,4,63,11,0,359,344,305,319,359,0,10,14,38,58,74,88,134,162,181,177,119,164,180,218,242,215,164,160,140,122,106,74,9,2,102,182,212,265,306,339,359,0,16,78,121,160,181,176,118,217,237,219,214,142,114,60,41,0,2,63,4,0,359,314,302,334,358,359,0,54,72,105,134,150,180,179,119,169,206,224,234,220,154,128,96,70,26,9,3,66,122,172,197,210,256,306,320,351,359,0,45,64,87,100,158,180,178,123,139,214,240,210,166,161,118,68,16,0,3,60,15,0,359,358,326,318,300,326,359,0,18,22,44,62,84,108,147,160,180,178,118,176,214,241,201,166,160,106,74,8,0,0,0,-1,358,358,332,311,295,262,224,202,180,197,191,210,232,264,309,342,352,359,332,302,276,232,198,189,181,215,231,276,331,359,0,46,65,126,157,216,273,315,351,357,332,306,279,262,218,186,186,245,258,308,342,359,352,316,284,238,210,170,160,132,94,56,48,34,0,359,316,286,254,199,187,180,208,267,306,337,352,359,0,0,0,359,322,305,256,220,198,187,181,212,271,318,359,0,8,38,54,104,163,213,231,276,320,351,359,0,0,0,359,328,304,260,224,202,191,183,262,284,340,352,359,326,278,236,216,134,72,19,5,5,5,-1,299,299,326,359,0,23,44,70,92,133,161,176,136,118,159,223,240,211,170,164,108,68,18,3,57,57,0,359,314,306,325,346,359,0,38,68,102,131,146,161,178,146,132,118,214,240,224,216,150,128,82,50,13,0,42,59,111,164,188,214,228,242,280,340,359,0,46,66,119,132,143,143,90,92,177,209,184,172,138,118,84,47,37,37,90,90,0,359,339,333,359,0,30,44,87,135,145,145,94,98,157,201,207,154,138,112,95,62,36,32,64,87,145,178,236,270,318,335,359,0,20,24,70,96,132,143,143,270,270,359,0,90,90,115,159,191,206,158,113,49,38,38,0,359,270,270,90,90,56,26,0,359,357,332,359,0,20,70,119,134,150,150,270,270,92,92,116,150,186,202,146,106,48,37,34,56,114,179,224,244,300,340,359,0,36,50,62,80,136,152,152,270,270,90,90,133,148,209,148,132,114,97,52,42,42,0,359,270,270,90,90,82,66,46,0,359,355,336,351,356,359,0,12,16,32,38,76,92,122,137,137,270,270,359,0,90,90,130,174,203,209,180,126,88,31,67,109,174,226,240,271,300,315,334,359,0,20,48,57,74,118,152,169,182,173,145,130,115,130,224,240,212,198,154,132,106,91,24,0,359,357,359,0,2,48,60,13,0,359,305,334,359,0,8,36,67,108,160,183,174,146,133,120,159,220,240,225,217,160,131,114,98,62,29,12,0,359,359,359,0,34,52,108,176,222,244,269,328,359,0,36,57,102,137,163,184,184,118,118,220,238,215,158,138,88,36,23,0,359,356,359,356,0,62,62,0,359,352,320,300,332,359,0,18,55,87,116,156,177,181,172,145,131,119,173,212,229,240,162,74,0,359,320,279,279,-1};
int maxIdx = 760;
int bpm=<$BMP>;
int ribbon_offset=0;

int32 ms=0;
int32 ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=1;
fix32 deadzone=5f; //deadzone for autoswirl set negative to disable

init {
    beat_anticipate=60000/(bpm*4);
}

main {
    ms+=elapsed_time();
    // Start / Reset
    if (get_val(XB1_VIEW) && event_active(XB1_A)) {
        ColorLED(CG);
        ms=0;
        idx=0;
        next_beat=0;
        running=1;
    }
    // Quit
    if (event_active(XB1_B)) {
        ColorLED(CR);
        ms=0;
        idx=0;
        next_beat=0;
        running=0;
    }
    if (event_active(XB1_RB)) {
        ribbon_offset = ribbon_offset + 25;
    }
    if (event_active(XB1_LB)) {
        ribbon_offset = ribbon_offset - 25;
    }
    
    if (running) {
        ms_ribbon = ms + ribbon_offset;
        //advance until we reach the end or catch up with the time code
        while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
            idx++;
        }
        //if we've reached the end of the ribbon, releast LS
        if (idx>=maxIdx || angles[idx]== -1) {
            curAngle=-1;
        } else {
            curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
        }
        //set LS position if ribbon present
        if (curAngle>=0) { 
            fix32 y = sin(deg2rad((fix32)curAngle))*100f; // opposite
            fix32 x = cos(deg2rad((fix32)curAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG ribbon angle: %d, x: %d, y: %d", curAngle, x, y);
            }
            set_val(STICK_2_Y, y);
            set_val(STICK_2_X, x);
            
        }
        
        //shoot if we are on the beat
        if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
            next_beat+=1;
            combo_run(fire);
        }
        
        //swirl reticle if idle
        if (event_active(XB1_X)) { autoswirl = !autoswirl; }
        if ((autoswirl==1) && (get_val(XB1_RX)<=deadzone) && (get_val(XB1_RY)<=deadzone) && (get_val(XB1_RX)>=-deadzone) && (get_val(XB1_RY)>=-deadzone)) {
            fix32 aimAngle = mod((fix32)ms, 360f);
            fix32 rsX = sin(deg2rad(aimAngle))*100f; // opposite
            fix32 rsY = cos(deg2rad(aimAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG aim angle: %d, x: %d, y: %d", aimAngle, rsX, rsY);
            }
            set_val(STICK_1_Y, rsY);
            set_val(STICK_1_X, rsX);
        }
    }
}

combo fire {
    set_val(XB1_RT,100);wait(50);
}