#pragma METAINFO("Aaero: I Can't Stop", 1, 0, "Palesius, Parker")
#include <xb1.gph>
#include "../common/ColorLED.gph"

const int32 times[] = {0,45646,46146,46263,46330,46496,46547,46580,46847,46930,46964,46997,47014,47181,47247,47264,47548,47631,47664,47714,47881,47948,47965,48232,48315,48398,48482,48649,48916,49016,49049,49149,49316,49370,49371,49466,49533,49766,49850,49933,50033,50250,50534,50617,50667,50701,50868,50918,50951,51218,51351,51401,51552,51635,51668,51935,52019,52119,52236,52319,52336,52603,52703,52803,52953,53003,53067,53068,53153,53203,53287,53487,53537,53654,53670,53820,53921,53954,54221,54321,54404,54571,54621,54638,54922,55022,55055,55138,55289,55339,55622,55722,55756,55806,55956,56006,56039,56306,56406,56440,56507,56657,56740,56761,56762,56840,56890,57057,57207,57257,57324,57407,57591,57641,57925,58008,58108,58275,58342,58609,58725,58742,58792,58959,58992,59042,59062,59063,59126,59259,59459,59493,59776,59877,59910,59993,60177,60452,60453,60460,60611,60744,60878,61028,61111,61261,61311,61328,61612,61712,61778,61945,61995,62029,62312,62412,62513,62663,62729,62996,63113,63163,63347,63413,63697,63730,63797,63881,64031,64081,64146,64147,64231,64264,64414,64581,64748,64781,64948,65015,65032,65299,65415,65465,65732,65999,66099,66166,66333,66416,66733,66800,66834,66917,66984,67100,67384,67518,67568,67734,67832,67833,67868,67901,67918,67985,68068,68252,68268,68302,68435,68468,68569,68735,69002,69086,69119,69152,69286,69419,69686,69803,69887,70087,70103,70387,70504,70554,70721,70771,70804,71071,71205,71255,71421,71471,71527,71528,71622,71738,72105,72206,72406,72689,72789,72856,72990,73073,73123,73407,73490,73557,73707,73774,73841,73855,73856,74775,75659,75776,75876,76043,76109,76376,76476,76560,76660,76793,77077,77110,77211,77244,77394,77461,77494,77778,77861,77945,78128,78195,78462,78562,78595,78645,78762,78862,78912,78913,79046,79196,79413,79479,79513,79563,79713,79796,80080,80180,80214,80264,80414,80447,80497,80797,80881,80898,80998,81181,81465,81565,81582,81765,81849,81882,82149,82266,82316,82499,82549,82604,82605,82683,82699,82850,83116,83166,83267,83483,83767,83884,83917,84001,84101,84168,84184,84468,84551,84635,84835,84885,85152,85235,85285,85302,85485,85536,85569,85836,85936,86019,86186,86236,86297,86298,86370,86386,86553,86703,86854,86954,87171,87204,87454,87571,87621,87804,87855,87888,88155,88272,88355,88522,88605,88610,88611,89806,90424,90440,90507,90557,90591,90674,90807,90858,90891,91141,91225,91275,91308,91391,91508,91575,91842,91959,91975,92059,92242,92259,92543,92626,92676,92793,92910,92960,93227,93310,93427,93560,93610,93679,93680,93760,93777,93894,94244,94311,94478,94578,94845,94962,94978,95145,95245,95279,95529,95612,95662,95696,95779,95946,96230,96330,96413,96580,96647,96914,97014,97080,97231,97331,97379,97380,97481,97514,97631,97814,97965,98015,98131,98248,98282,98532,98615,98682,98832,98916,98949,99233,99349,99383,99466,99633,99666,99917,100033,100083,100234,100317,100334,100601,100701,100801,100951,101001,101066,101067,101134,101185,101318,101418,101602,101618,101702,101818,101952,102236,102319,102402,102553,102619,102653,102920,103020,103053,103153,103287,103392,103393,103403,104488,104988,104989,134268,134768,134852,134885,134902,134968,135185,135452,135586,135602,135736,135853,135886,136153,136236,136286,136303,136436,136570,136854,136954,136987,137070,137271,137538,137621,137721,137888,138005,138138,138288,138455,138456,138457,138589,138639,138822,138872,139156,139239,139323,139489,139540,139573,139840,139923,139973,140007,140123,140240,140290,140541,140624,140657,140674,140824,140924,140974,141225,141341,141391,141592,141758,141792,141909,142125,142143,142144,142259,142342,142492,142543,142576,142843,142976,143026,143210,143260,143544,143644,143710,143894,143944,144228,144378,144411,144561,144661,144928,145028,145062,145162,145329,145412,145596,145712,145837,145838,145946,145979,146113,146246,146280,146530,146630,146730,146880,146914,146947,147231,147347,147364,147464,147614,147781,147814,147898,148098,148342,148343,148382,148498,148515,148565,148732,148765,148799,149066,149132,149166,149283,149539,149540,149550,149650,149666,149783,149950,150234,150317,150434,150584,150651,150918,151018,151051,151134,151268,151318,151335,151618,151735,151768,151952,152002,152035,152291,152292,152302,152303,152304,152402,152452,152503,152653,152703,152903,153003,153136,153226,153227,153270,153370,153387,153470,153487,153504,153637,153654,153921,154021,154087,154204,154321,154338,154595,154596,154605,154606,154607,154721,154738,154905,155022,155305,155422,155439,155489,155656,155722,156006,156106,156173,156306,156390,156523,156540,156590,156657,156912,156913,157007,157040,157074,157241,157307,157341,157624,157724,157758,157891,158008,158025,158308,158408,158509,158642,158692,158725,158992,159092,159176,159359,159409,159693,159810,159843,160027,160077,160210,160227,160277,160344,160610,160611,160627,160694,160777,160961,161011,161044,161311,161395,161478,161628,161695,161728,161995,162095,162112,162179,162312,162396,162446,163730,164248,164264,164281,164298,164299,164300,164381,164448,164498,164715,164998,165115,165148,165299,165415,165682,165782,165866,166033,166116,166383,166466,166583,166733,166800,167067,167167,167234,167317,167534,167618,167651,167734,167985,167986,168118,168151,168252,168335,168368,168418,168685,168785,168819,168919,169069,169102,169386,169486,169520,169586,169753,169803,170070,170170,170237,170320,170487,170804,170871,170904,170988,171154,171271,171405,171555,171686,171687,171772,171822,171839,171955,172089,172105,172372,172489,172556,172739,172806,173073,173156,173207,173240,173290,173423,173473,173490,173774,173941,173974,174124,174174,174491,174558,174591,174675,174875,174975,175008,175092,175325,175377,175378,175509,175526,175642,175742,175792,176076,176210,176226,176276,176310,176410,176460,176493,176760,176877,176910,176960,177110,177160,177227,178395,179053,179054,179079,179129,179146,179179,179196,179229,179313,179479,179513,179763,179863,179897,179913,179930,180113,180180,180497,180581,180597,180647,180814,180881,181148,181248,181281,181331,181415,181565,181849,181949,182015,182182,182232,182399,182432,182516,182757,182758,182850,182900,182933,183133,183183,183467,183550,183650,183800,183851,183884,184139,184140,184151,184152,184153,184284,184301,184484,184551,184568,184852,184935,185035,185102,185202,185235,185269,185536,185636,185669,185686,185736,185769,185919,186053,186086,186236,186450,186451,186570,186587,186637,186670,186870,187154,187237,187271,187304,187387,187538,187571,187855,187988,188038,188188,188272,188539,188639,188672,188755,188889,188972,189232,189233,189239,189240,189241,189339,189356,189573,189606,189756,189773,189823,189857,189907,189940,190123,190149,190150,190240,190324,190357,190457,190490,190541,190574,190858,190924,190958,190991,191024,191141,191241,191258,191542,191658,191725,191758,192042,192659,193033,193034,193327,193343,193843,193844};
const int angles[] = {-1,181,181,222,259,318,333,348,358,332,312,300,285,224,204,194,188,216,230,260,316,338,348,358,330,286,252,194,180,214,234,280,335,359,0,42,73,154,184,211,265,340,359,332,308,288,226,212,196,180,228,254,311,338,347,352,322,275,234,209,197,180,212,265,318,331,359,0,37,65,98,164,184,226,239,298,328,346,359,328,284,222,207,196,184,216,236,274,326,345,354,320,300,276,222,207,193,181,218,236,266,318,350,359,0,34,63,125,174,194,214,261,324,344,354,328,276,220,193,180,220,235,259,320,326,351,359,0,26,90,152,166,184,220,240,276,341,359,0,0,70,120,165,222,265,318,331,341,358,324,288,223,210,196,183,222,272,320,347,358,318,286,222,195,182,196,221,263,316,331,359,0,36,56,114,172,231,252,314,335,346,358,318,288,193,184,220,254,314,347,342,318,298,262,240,199,183,233,263,319,359,0,14,27,40,68,100,163,179,181,230,250,292,341,356,327,314,294,240,194,183,224,268,334,344,356,314,283,222,209,194,182,231,261,319,334,359,0,42,94,222,272,339,358,326,286,238,214,194,191,220,256,312,333,358,359,0,94,179,211,264,320,347,359,326,282,244,199,182,195,234,252,309,328,343,355,328,283,218,198,184,217,238,261,304,336,359,0,61,118,192,214,233,258,312,342,356,322,302,278,224,214,192,193,222,236,276,342,353,320,305,232,207,194,183,224,254,320,335,359,0,34,47,106,196,214,267,340,358,316,296,260,223,204,194,184,212,256,328,346,358,328,308,294,223,210,195,182,212,260,318,332,359,0,32,44,110,158,210,264,339,348,359,320,286,222,204,196,183,228,269,326,359,359,0,118,173,171,198,217,236,273,320,337,345,358,334,312,292,258,220,193,182,222,236,274,336,346,354,326,299,252,215,194,182,208,266,316,330,359,0,34,47,94,214,250,314,342,358,314,300,234,202,192,180,208,230,250,283,341,356,322,280,222,194,180,213,250,306,338,359,0,44,63,110,173,228,257,300,340,347,357,332,296,236,212,196,184,228,248,282,339,348,358,318,286,232,205,194,180,211,261,316,330,359,0,30,58,106,136,204,208,252,296,344,356,329,284,228,209,194,181,214,234,278,324,359,0,3,118,118,-1,185,185,212,226,240,270,196,182,228,243,294,332,347,356,328,306,292,242,198,184,220,240,278,348,354,328,276,220,174,111,56,0,0,359,309,278,216,195,184,211,254,318,333,347,358,332,307,288,244,204,192,186,214,226,242,300,332,344,358,318,286,215,145,127,80,6,0,359,318,274,220,206,193,180,232,262,325,346,353,318,281,218,198,182,239,258,312,348,353,318,299,257,203,165,82,45,0,359,320,301,244,202,193,183,214,266,320,326,346,358,314,300,258,210,135,118,84,15,0,359,357,316,302,279,220,212,196,180,150,132,86,0,359,356,318,304,254,196,188,213,270,322,346,356,326,305,266,220,205,195,184,228,248,318,332,347,359,0,0,0,359,323,300,272,220,205,114,74,32,0,359,344,304,290,258,260,248,202,193,183,219,254,298,337,346,359,0,0,0,359,318,304,238,199,185,224,238,262,320,347,353,318,281,234,205,148,135,118,88,0,359,327,314,292,229,212,196,184,222,242,298,336,346,356,319,269,224,210,195,184,216,260,324,342,358,314,292,224,209,151,138,121,90,0,359,354,332,287,220,208,192,188,212,256,312,330,346,358,326,313,281,232,204,181,54,5,14,15,0,0,359,333,302,273,198,182,226,246,304,343,358,328,284,225,192,186,212,268,321,347,358,327,290,256,180,142,123,88,0,359,313,292,252,223,217,194,183,214,235,279,328,343,353,320,300,272,216,195,182,214,252,286,342,344,318,300,264,208,158,97,46,0,359,329,308,294,248,203,194,182,220,258,322,342,358,328,308,288,266,222,205,195,183,250,269,322,340,346,322,303,266,195,152,134,98,19,0,359,310,296,252,218,198,182,234,248,265,280,316,331,346,359,320,298,275,222,207,180,64,0,359,357,342,328,318,312,292,258,201,192,184,216,236,240,254,319,346,344,312,298,276,218,199,184,216,236,260,292,341,356,320,284,222,208,134,117,82,0,359,328,307,288,216,196,183,212,267,318,334,348,359,0,0,0,359,308,294,226,205,194,183,211,264,288,322,330,346,359,322,307,292,276,260,210,152,134,74,0,359,318,304,285,268,197,186,214,226,246,282,330,346,356,302,275,222,199,184,216,237,273,318,340,359,0,0,0,359,324,308,223,216,151,136,118,101,86,70,9,0,359,327,290,272,240,224,210,196,188,208,226,240,259,302,335,346,356,314,284,265,170,60,0,359,312,306,306,-1};
int maxIdx = 1038;
int bpm=<$BMP>;
int ribbon_offset=0;

int32 ms=0;
int32 ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=1;
fix32 deadzone=5f; //deadzone for autoswirl set negative to disable

init {
    beat_anticipate=60000/(bpm*4);
}

main {
    ms+=elapsed_time();
    // Start / Reset
    if (get_val(XB1_VIEW) && event_active(XB1_A)) {
        ColorLED(CG);
        ms=0;
        idx=0;
        next_beat=0;
        running=1;
    }
    // Quit
    if (event_active(XB1_B)) {
        ColorLED(CR);
        ms=0;
        idx=0;
        next_beat=0;
        running=0;
    }
    if (event_active(XB1_RB)) {
        ribbon_offset = ribbon_offset + 25;
    }
    if (event_active(XB1_LB)) {
        ribbon_offset = ribbon_offset - 25;
    }
    
    if (running) {
        ms_ribbon = ms + ribbon_offset;
        //advance until we reach the end or catch up with the time code
        while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
            idx++;
        }
        //if we've reached the end of the ribbon, releast LS
        if (idx>=maxIdx || angles[idx]== -1) {
            curAngle=-1;
        } else {
            curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
        }
        //set LS position if ribbon present
        if (curAngle>=0) { 
            fix32 y = sin(deg2rad((fix32)curAngle))*100f; // opposite
            fix32 x = cos(deg2rad((fix32)curAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG ribbon angle: %d, x: %d, y: %d", curAngle, x, y);
            }
            set_val(STICK_2_Y, y);
            set_val(STICK_2_X, x);
            
        }
        
        //shoot if we are on the beat
        if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
            next_beat+=1;
            combo_run(fire);
        }
        
        //swirl reticle if idle
        if (event_active(XB1_X)) { autoswirl = !autoswirl; }
        if ((autoswirl==1) && (get_val(XB1_RX)<=deadzone) && (get_val(XB1_RY)<=deadzone) && (get_val(XB1_RX)>=-deadzone) && (get_val(XB1_RY)>=-deadzone)) {
            fix32 aimAngle = mod((fix32)ms, 360f);
            fix32 rsX = sin(deg2rad(aimAngle))*100f; // opposite
            fix32 rsY = cos(deg2rad(aimAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG aim angle: %d, x: %d, y: %d", aimAngle, rsX, rsY);
            }
            set_val(STICK_1_Y, rsY);
            set_val(STICK_1_X, rsX);
        }
    }
}

combo fire {
    set_val(XB1_RT,100);wait(50);
}