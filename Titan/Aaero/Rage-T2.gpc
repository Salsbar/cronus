#pragma METAINFO("Aaero: I Can't Stop", 1, 0, "Palesius, Parker")
#include <xb1.gph>

const int32 times[] = {0,21706,22206,22372,22373,22873,22906,23056,23090,23190,23340,23390,23423,23557,23640,23691,23692,24258,24291,24374,24391,24474,24491,24558,24725,24775,24858,24925,25075,25081,25082,25092,25609,25709,25742,25759,25792,25826,25943,26059,26076,26109,26143,26210,26276,26326,26360,26447,26448,27060,27160,27277,27461,27511,27728,28195,28212,28428,28512,28545,28595,28629,28745,28769,28770,28829,28862,28896,28996,29129,29813,29897,29930,29980,30013,30063,30130,30150,30151,30163,30230,30247,30297,30330,30397,30414,30497,30714,31164,31248,31281,31298,31448,31532,31552,31553,31615,31632,31865,31915,32583,32766,32816,33016,33100,33267,33734,33750,33984,34051,34067,34117,34151,34268,34384,34418,34468,34568,34668,34738,34739,35235,35385,35452,35469,35502,35552,35686,35719,35736,35769,35819,35903,36036,36099,36100,36253,36703,36753,36770,36837,36854,36887,36920,36987,37037,37054,37087,37137,37154,37187,37221,37304,37337,37371,37437,37524,37525,38138,38322,38355,38587,38588,38589,38591,38592,38772,38805,39289,39306,39523,39590,39623,39640,39706,39840,39856,39857,39857,39873,39907,39923,39940,39990,40023,40090,40224,40908,40991,41024,41074,41124,41208,41251,41252,41308,41325,41375,41408,41558,41708,41725,42292,42342,42392,42409,42442,42476,42509,42543,42593,42637,42638,42709,42743,42843,42993,43694,43911,44144,44378,44845,44862,45095,45162,45179,45295,45362,45462,45479,45512,45529,45579,45612,45696,45762,45878,45879,46463,46563,46580,46663,46763,46880,46897,46930,46964,47047,47080,47114,47264,47270,47271,47281,47848,47931,47948,48015,48148,48265,48282,48315,48348,48415,48532,48707,48708,49233,49466,49683,49700,49867,49900,50384,50400,50617,50734,50751,50834,50884,50901,50962,50963,51001,51018,51068,51084,51134,51168,51318,52002,52102,52119,52152,52169,52202,52236,52302,52347,52348,52402,52419,52452,52469,52519,52553,52653,52803,52819,53353,53453,53487,53504,53620,53687,53735,53736,53804,53820,53871,53904,53971,54087,54788,54988,55005,55222,55289,55472,55789,55806,56156,56256,56273,56390,56456,56508,56509,56557,56573,56590,56623,56657,56707,56857,57558,57624,57658,57691,57708,57858,57894,57895,57908,57975,57991,58041,58058,58175,58242,58442,58909,59009,59026,59042,59076,59109,59176,59226,59283,59284,59326,59343,59359,59393,59409,59493,59626,59676,60327,60561,60711,60794,61011,61128,61144,61728,61812,61845,61862,61979,62012,62059,62060,62162,62196,62229,62346,62379,62412,62963,63130,63197,63213,63247,63280,63397,63447,63448,63497,63514,63630,63697,63730,63764,63914,63931,64481,64531,64598,64615,64648,64681,64798,64834,64835,64915,64965,64998,65032,65165,65816,65832,66149,66649,66650,66767,67267,67268,67269,67351,67367,67417,67451,67568,67684,67701,67751,67784,67851,67968,68310,68311,68652,68735,68769,68785,68919,69052,69069,69102,69136,69169,69203,69286,69453,69461,69462,69469,70037,70120,70137,70170,70187,70337,70454,70487,70554,70737,70824,70825,71438,71638,71655,71872,71922,72105,72573,72589,72823,72890,72906,72956,72990,73090,73106,73152,73153,73156,73223,73240,73273,73307,73390,73524,74208,74308,74324,74374,74408,74458,74541,74546,74547,74591,74608,74658,74691,74775,74791,74808,74908,75108,75592,75676,75692,75726,75759,75792,75826,75909,75930,75931,75993,76009,76059,76093,76176,76193,76293,76977,77211,77444,77644,78128,78145,78362,78428,78478,78495,78545,78579,78629,78762,78779,78829,78862,78896,78929,78962,78996,79062,79149,79150,79763,79847,79863,79897,79913,79963,80063,80180,80197,80230,80264,80297,80330,80430,80493,80494,80647,81122,81123,81131,81132,81133,81198,81231,81265,81281,81365,81415,81431,81448,81465,81532,81548,81598,81632,81832,82007,82008,82533,82683,82749,82799,82983,83050,83183,83200,83684,83700,83917,83984,84051,84151,84168,84201,84255,84256,84318,84334,84384,84418,84484,84535,84601,85302,85385,85402,85435,85469,85619,85641,85642,85702,85719,85769,85802,85919,86103,86119,86687,86787,86803,86887,86920,87004,87044,87045,87070,87087,87104,87271,87387,88071,88222,88272,88288,88539,88705,88739,89239,89240,118969,119469,119987,120070,120087,120103,120153,120187,120220,120237,120270,120326,120327,120337,120354,120370,120387,120437,120470,120554,120637,120921,121388,121572,121588,121772,121839,122055,122523,122539,122756,122840,122856,122890,122906,122956,122990,123073,123173,123190,123223,123257,123307,123457,123571,123572,124141,124224,124241,124274,124291,124341,124374,124441,124541,124558,124608,124641,124708,124775,124942,124950,124951,124958,125526,125609,125642,125676,125709,125742,125792,125809,125993,126093,126226,126313,126314,126927,127110,127144,127377,127578,128061,128078,128312,128378,128445,128579,128595,128612,128643,128644,128712,128729,128762,128795,128996,129713,129796,129813,129863,129913,129980,130034,130035,130080,130097,130130,130163,130280,130347,130497,130514,131081,131181,131198,131231,131248,131281,131315,131381,131420,131421,131498,131532,131648,131732,132482,132649,132683,132716,132933,133100,133133,133617,133634,133867,133951,133967,134017,134051,134084,134117,134151,134284,134334,134451,134568,134636,134637,135252,135352,135369,135402,135435,135502,135569,135702,135736,135769,135919,135982,135983,136136,136603,136653,136720,136753,136803,136954,137004,137037,137054,137070,137104,137137,137221,137319,137320,137321,137688,137689,138055,138056,138057,138155,138255,138388,138470,138471,138472,138474,138475,138689,139156,139173,139406,139473,139506,139540,139556,139590,139606,139690,139746,139747,139773,139806,139857,139907,140107,140807,140874,140924,140958,140974,141024,141058,141108,141142,141143,141208,141241,141341,141425,141592,141608,142176,142259,142276,142309,142326,142376,142409,142476,142519,142520,142609,142626,142676,142693,142726,142759,142876,143577,143710,143794,143977,144027,144261,144578,144595,144978,145062,145095,145145,145179,145262,145305,145306,145312,145362,145379,145412,145445,145529,145646,146330,146413,146430,146480,146513,146663,146681,146682,146763,146797,146830,146864,147014,147231,147714,147798,147814,147865,147898,147965,148048,148068,148069,148098,148131,148182,148232,148315,148332,148432,149132,149299,149349,149550,149600,149650,149700,149766,149783,150467,150567,150584,150601,150651,150684,150801,150838,150839,150851,150868,150901,150934,150951,150984,151018,151084,151201,151735,151919,151985,152002,152069,152152,152169,152235,152236,152302,152319,152452,152503,152553,152703,152719,153270,153287,153370,153387,153420,153453,153487,153520,153587,153615,153616,153687,153704,153754,153770,153937,154437,154438,154472,154972,154972,155472,155473,155556,156056,156106,156139,156173,156190,156223,156256,156290,156306,156340,156456,156473,156523,156557,156640,156657,156757,156825,156826,157441,157508,157524,157574,157608,157658,157741,157791,157808,157891,157975,158058,158091,158178,158179,158325,158809,158892,158909,158926,158992,159126,159243,159293,159343,159426,159493,159526,159697,159698,160210,160410,160460,160674,160675,160677,160678,160679,160861,160928,161361,161378,161612,161695,161712,161845,161895,161940,161941,162012,162029,162162,162229,162312,162980,163046,163063,163113,163130,163213,163263,163280,163328,163329,163397,163430,163497,163564,163664,163864,164364,164448,164464,164515,164548,164698,164713,164714,164798,164848,164882,164915,165048,165065,165782,165966,165999,166233,166416,166900,166917,167150,167234,167251,167284,167301,167351,167384,167467,167534,167551,167618,167651,167668,167718,167768,167835,167924,167925,168552,168652,168669,168719,168752,168802,168819,168952,168969,169002,169036,169119,169152,169236,169275,169276,169419,169920,169987,170020,170053,170070,170220,170270,170337,170354,170404,170420,170470,170504,170621,170706,170707,171305,171455,171538,171769,171770,171772,171774,171775,171955,171972,172456,172472,172706,172806,172823,172873,172906,172956,172990,173006,173023,173043,173044,173106,173123,173156,173190,173273,173390,174107,174191,174224,174258,174274,174324,174358,174374,174433,174434,174508,174525,174558,174591,174708,174725,174741,174808,174958,175459,175542,175559,175609,175626,175759,175813,175814,175859,175876,175893,175926,175959,176009,176093,176159,176860,177094,177327,177477,177544,178044,178045};
const int angles[] = {-1,0,0,0,359,358,354,270,248,204,116,91,70,17,0,0,359,354,354,316,294,256,242,218,117,86,50,19,19,0,359,331,358,332,316,296,281,260,210,140,124,109,88,59,32,7,0,0,359,356,334,302,348,358,306,306,183,183,224,252,273,292,342,359,0,42,58,80,127,180,183,223,252,272,292,314,342,359,0,10,48,63,84,104,131,143,171,207,182,204,217,235,308,347,359,0,38,56,169,180,181,223,238,186,194,230,230,351,351,326,306,281,260,210,138,116,88,43,0,0,359,356,348,324,305,288,254,194,166,160,136,107,64,11,0,359,332,358,344,346,318,298,282,262,232,212,198,180,154,136,120,100,58,48,31,0,0,359,356,314,300,359,0,0,0,359,318,306,306,185,185,213,234,250,284,346,359,0,0,5,24,32,50,79,92,126,180,182,222,250,270,302,334,359,0,33,51,73,94,163,163,208,181,202,228,247,262,282,294,312,332,359,0,43,66,116,180,184,236,181,234,234,344,344,316,297,238,212,152,134,119,104,85,66,33,0,0,359,357,306,288,248,202,131,115,101,81,48,31,18,18,0,359,332,358,318,301,264,202,132,117,103,84,55,0,0,359,358,302,355,358,320,306,306,180,180,240,256,296,320,324,359,0,22,40,64,78,98,116,180,180,228,246,262,276,288,306,332,359,0,32,49,64,78,98,116,162,162,208,182,208,224,244,304,330,359,0,41,57,79,100,128,180,180,230,241,187,192,239,239,180,183,220,240,302,328,359,0,29,36,54,69,90,114,180,184,210,237,254,269,336,359,0,8,45,61,82,96,139,168,208,182,210,217,236,252,274,304,326,359,0,24,32,50,65,80,116,174,180,181,238,201,181,232,232,180,180,222,242,258,314,328,359,0,67,81,100,149,168,180,184,196,223,242,258,278,329,359,0,29,46,108,134,150,164,164,210,184,196,236,252,267,286,337,359,0,50,80,94,112,165,165,45,45,45,-1,0,0,0,359,320,300,276,256,206,134,118,97,78,49,0,0,359,359,320,299,282,222,148,130,115,94,81,62,30,30,0,359,332,358,326,306,290,274,209,138,114,80,0,0,359,356,306,300,353,350,310,310,188,188,212,232,257,278,324,328,359,0,2,38,56,71,92,127,180,183,234,252,274,292,316,356,359,0,26,43,67,88,125,130,143,172,208,182,220,239,256,277,288,306,347,359,0,36,54,76,96,131,143,180,180,236,182,234,234,359,359,330,300,284,262,244,222,149,131,108,86,74,56,46,30,0,0,359,356,314,295,280,265,246,197,128,113,99,78,68,50,11,0,359,332,359,0,0,0,359,336,311,292,277,238,217,212,198,192,151,134,110,90,0,0,359,358,328,307,310,353,348,314,306,306,184,184,210,260,306,318,328,359,0,36,54,76,96,125,147,180,185,217,237,254,276,347,359,0,34,52,74,94,146,150,208,181,222,241,278,300,334,359,0,16,22,40,125,180,184,214,230,242,183,222,232,232,-1,209,209,183,224,234,252,274,294,305,317,326,359,0,6,20,26,45,68,88,126,160,180,183,230,240,195,184,232,232,356,356,322,303,287,272,252,234,194,136,120,106,86,62,0,0,359,357,324,306,288,273,254,236,209,148,130,108,87,58,30,30,0,359,331,356,329,303,278,264,246,222,218,106,57,0,0,359,356,312,302,359,312,312,185,185,212,262,322,328,342,359,0,37,54,69,90,180,185,226,246,276,300,328,359,0,26,44,59,80,134,163,163,208,180,230,248,264,278,290,308,335,359,0,47,70,126,160,184,224,235,234,182,220,234,234,354,354,312,293,270,250,238,220,208,132,102,50,0,0,359,355,303,286,272,252,222,191,105,92,72,11,0,359,332,356,346,318,290,261,190,162,137,130,114,100,80,46,0,359,359,359,0,0,0,359,328,304,335,359,0,0,0,359,312,312,184,184,210,236,253,268,282,294,328,359,0,14,36,69,98,180,181,208,246,264,278,298,316,337,359,0,42,66,118,150,150,208,184,216,235,252,268,288,306,333,359,0,54,69,90,104,114,132,180,184,213,238,194,180,239,239,180,184,222,253,277,296,331,359,0,4,34,51,66,88,129,180,180,212,230,256,278,348,359,0,50,72,86,106,167,208,180,211,228,255,276,306,348,359,0,16,38,70,98,132,144,180,181,222,240,186,192,206,231,231,179,180,210,218,237,262,282,334,359,0,8,14,36,54,69,83,103,131,180,184,196,227,244,282,318,322,359,0,37,55,116,135,160,160,208,184,185,226,244,260,280,292,310,342,359,0,43,58,80,94,164,164,-1,90,90,90,90,-1,354,354,336,312,294,278,264,246,234,222,212,143,125,103,82,47,35,0,0,359,355,330,312,286,264,239,205,170,164,109,70,35,16,0,359,332,357,330,322,303,264,205,134,103,76,43,12,0,0,359,358,310,308,359,0,0,0,359,312,306,306,190,190,226,246,312,332,359,0,42,58,118,142,180,180,204,221,248,264,302,324,329,359,0,42,65,100,128,168,208,180,212,230,256,278,350,359,0,52,82,96,114,171,180,182,226,238,182,228,228,356,356,321,302,286,270,250,232,194,158,139,100,87,74,57,34,0,0,359,356,308,290,266,248,224,220,136,120,106,84,50,33,7,0,359,332,359,334,307,290,274,209,174,136,120,98,84,66,50,0,0,359,356,326,304,359,0,0,0,359,316,306,306,184,184,236,254,276,294,318,328,342,347,359,0,38,56,70,92,127,180,185,222,252,268,282,300,318,322,359,0,46,62,76,96,147,152,166,174,210,184,211,228,254,270,328,359,0,26,34,52,67,88,113,146,180,182,238,180,211,232,232,-1};
int maxIdx = 1259;
int bpm=173;
int ribbon_offset=0;

int32 ms=0;
int32 ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=1;
fix32 deadzone=5f; //deadzone for autoswirl set negative to disable

init {
    beat_anticipate=60000/(bpm*4);
}

main {
    ms+=elapsed_time();
    // Start / Reset
    if (get_val(XB1_VIEW) && event_active(XB1_A)) {
        ms=0;
        idx=0;
        next_beat=0;
        running=1;
    }
    // Quit - removed due to bytecode limit
//     if (event_active(XB1_B)) {
//         ms=0;
//         idx=0;
//         next_beat=0;
//         running=0;
//     }
    if (event_active(XB1_RB)) {
        ribbon_offset = ribbon_offset + 25;
    }
    if (event_active(XB1_LB)) {
        ribbon_offset = ribbon_offset - 25;
    }
    
    if (running) {
        ms_ribbon = ms + ribbon_offset;
        //advance until we reach the end or catch up with the time code
        while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
            idx++;
        }
        //if we've reached the end of the ribbon, releast LS
        if (idx>=maxIdx || angles[idx]== -1) {
            curAngle=-1;
        } else {
            curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
        }
        //set LS position if ribbon present
        if (curAngle>=0) { 
            fix32 y = sin(deg2rad((fix32)curAngle))*100f; // opposite
            fix32 x = cos(deg2rad((fix32)curAngle))*100f; // adjacent
            set_val(STICK_2_Y, y);
            set_val(STICK_2_X, x);
            
        }
        
        //shoot if we are on the beat
        if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
            next_beat+=1;
            combo_run(fire);
        }
        
        //swirl reticle if idle
        if (event_active(XB1_X)) { autoswirl = !autoswirl; }
        if ((autoswirl==1) && (get_val(XB1_RX)<=deadzone) && (get_val(XB1_RY)<=deadzone) && (get_val(XB1_RX)>=-deadzone) && (get_val(XB1_RY)>=-deadzone)) {
            fix32 aimAngle = mod((fix32)ms, 360f);
            fix32 rsX = sin(deg2rad(aimAngle))*100f; // opposite
            fix32 rsY = cos(deg2rad(aimAngle))*100f; // adjacent
            set_val(STICK_1_Y, rsY);
            set_val(STICK_1_X, rsX);
        }
    }
}

combo fire {
    set_val(XB1_RT,100);wait(50);
}