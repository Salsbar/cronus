#pragma METAINFO("Aaero: I Can't Stop", 1, 0, "Palesius, Parker")
#include <xb1.gph>
#include "../common/ColorLED.gph"

const int32 times[] = {0,21188,21688,21989,22155,22573,22723,22724,22873,23240,23357,23452,23453,24308,24591,24975,25309,27444,27944,27945,30081,30581,30848,30948,31098,31181,31715,31949,31999,32282,32449,32799,32933,33467,33734,34284,34568,36603,37103,37104,37988,38488,38856,38972,39022,39273,39306,39640,39656,40007,40157,41491,41508,41992,42159,42309,42426,42759,42943,42993,43243,43327,43440,43441,43443,44011,44161,44561,44703,44704,44711,45925,45926,46330,46830,46831,47498,47998,48052,48053,48432,48599,49166,49249,49266,50651,50666,50667,50667,50779,50780,51118,51318,51502,51735,52586,52870,53704,53887,54004,57140,57274,57291,57541,57608,57958,57975,58292,58442,59776,59793,60260,60444,60577,60711,61111,61178,61328,61545,61725,61726,61728,62296,62446,62846,63013,64631,65131,65132,65783,66283,66395,66396,66733,66900,67451,67534,67551,68936,68951,68952,68952,69012,69013,69436,69603,69786,70020,70871,71154,71989,72055,72289,75425,75542,75592,75826,75859,75893,76126,76143,76560,76727,78061,78078,78562,78729,78862,79012,79379,79429,79479,79596,79863,80010,80011,80013,80714,80714,80715,80731,81465,81481,82115,82123,82124,82132,82266,82766,82767,82900,83400,83400,83900,83901,84035,84535,85118,85135,86069,86069,86070,86086,86687,86695,86696,86703,86820,87320,87321,87471,87971,87971,88471,88472,88606,89106,89656,89673,89940,90440,90441,90474,90974,91258,91266,91267,91275,91391,91891,91892,92026,92526,92526,93026,93027,93160,93660,94244,94261,94528,95028,95029,95046,95546,95829,95837,95838,95846,95963,96463,96464,96597,97097,97097,97597,97598,97732,98232,98815,98832,99766,99783,100100,100600,100601,101152,101652,101652,102152,102153,102303,102803,103387,103391,103392,103403,104321,104338,104638,105138,105139,105740,106240,106240,106740,106741,106874,107374,107941,107949,107950,107958,108892,108909,109226,109726,109727,110294,110794,110794,111294,111295,111445,111945,112496,112508,112509,112513,112779,113279,113280,113297,113797,113797,114297,114298,114865,115365,115365,115865,115866,116000,116500,117084,117100,117367,117867,117868,117885,118385,118802,119302,119303,119437,119937,119937,120437,120438,120588,121088,121655,121672,122606,122614,122615,122623,123373,123873,123874,124008,124508,124508,125008,125009,125159,125659,126226,126243,127177,127193,127194,127194,127945,128445,128446,128579,129079,129079,129579,129580,129730,130230,130797,130814,131732,131748,132533,133033,133034,133167,133667,133667,134167,134168,136637,137137,137521,137754,138105,138272,138655,138889,139223,139439,139806,140040,140374,140574,142576,143076,143077,145780,146280,146327,146328,146663,146897,147247,147431,147798,148031,148398,148594,148595,148599,148657,148658,148949,149183,149516,149728,149729,149733,151735,152235,152236,154572,155072,155422,155539,155572,155606,155839,155873,155906,156223,156240,156573,156723,158058,158075,158542,158709,158859,159009,159376,159443,160027,160227,161139,161140,161144,163380,163880,163881,164065,164565,164998,165000,165001,165165,165732,165782,165832,167217,167233,167234,167234,167355,167356,167718,167885,168068,168302,169152,169436,170254,170554,170587,173524,174024,174025,174408,174908,175392,175409,175626,176126,176127,176694,177194,177477,177494,177628,178128,178129,179113,179613,180013,180030,180214,180714,180715,181265,181765,182049,182065,182199,182699,182700,183551,184051,184535,184551,184768,185268,185269,185836,186336,186620,186637,186770,187270,187271,188272,188772,189156,189173,189356,189856,189857,191492,191992,192100,192101,192426,192609,193160,193277,194645,194660,194661,194661,194782,194783,195145,195312,195495,195546,195746,196563,196847,197681,197998,201134,201285,201301,201552,201602,201835,201852,202286,202436,203770,203787,204254,204421,204571,204721,205055,205405,205622,205656,205719,205720,205722,206290,206406,206840,206990,208625,209125,209126};
const int angles[] = {-1,61,61,56,32,28,0,359,331,334,359,359,0,4,32,26,0,0,0,-1,180,180,182,148,150,180,180,229,239,236,209,206,180,176,148,149,208,209,209,-1,180,180,182,214,239,234,208,209,148,152,180,180,119,123,148,156,182,180,233,250,316,332,359,0,0,4,32,30,0,359,358,359,0,0,0,-1,0,0,0,359,356,331,326,306,299,301,359,0,0,0,359,358,331,324,301,297,270,267,216,180,180,222,242,240,209,209,148,151,180,180,120,123,149,151,180,180,220,265,318,359,0,0,4,32,32,0,0,0,-1,0,0,0,359,358,331,328,306,299,301,359,0,0,0,359,356,331,324,301,298,270,267,246,180,182,217,241,236,224,209,210,147,150,180,180,118,124,148,151,180,182,209,220,260,326,359,0,0,0,0,359,184,184,90,90,0,359,270,270,270,-1,90,90,90,90,-1,184,184,184,356,359,356,0,90,90,0,359,270,270,270,-1,90,90,90,90,-1,356,356,356,184,184,184,-1,90,90,90,0,359,270,270,270,-1,90,90,90,90,-1,184,184,184,356,356,356,-1,90,90,90,0,359,270,270,270,-1,90,90,90,90,-1,356,356,356,184,184,90,90,90,-1,90,90,90,90,-1,45,45,45,0,359,225,225,135,135,135,-1,135,135,135,135,-1,90,90,90,0,359,270,270,184,184,184,-1,184,184,184,184,-1,135,135,135,0,359,315,315,315,-1,225,225,225,225,-1,225,225,225,225,-1,184,184,184,356,356,356,-1,270,270,270,270,-1,270,270,270,270,-1,225,225,225,45,45,0,359,315,315,315,-1,315,315,315,315,-1,270,270,270,90,90,0,356,359,356,356,-1,356,356,356,356,-1,315,315,315,135,135,45,45,45,-1,45,45,45,45,-1,180,180,184,209,212,239,234,209,207,180,184,209,206,180,180,180,-1,0,0,0,359,356,331,326,301,306,331,336,359,0,0,0,359,357,331,333,359,0,0,0,0,-1,180,180,180,214,233,239,239,216,209,209,147,152,180,180,120,120,148,152,180,180,209,213,264,359,0,0,0,0,-1,0,0,0,0,359,331,328,318,298,301,359,0,0,0,359,358,331,324,301,297,270,270,186,180,180,180,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,0,0,0,359,358,331,328,301,301,359,0,0,0,359,358,331,326,318,301,299,270,270,182,180,228,239,239,209,209,149,152,180,180,120,122,149,150,180,180,287,334,347,359,0,0,4,33,31,0,0,0,-1};
int maxIdx = 583;
int bpm=<$BMP>;
int ribbon_offset=0;

int32 ms=0;
int32 ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=1;
fix32 deadzone=5f; //deadzone for autoswirl set negative to disable

init {
    beat_anticipate=60000/(bpm*4);
}

main {
    ms+=elapsed_time();
    // Start / Reset
    if (get_val(XB1_VIEW) && event_active(XB1_A)) {
        ColorLED(CG);
        ms=0;
        idx=0;
        next_beat=0;
        running=1;
    }
    // Quit
    if (event_active(XB1_B)) {
        ColorLED(CR);
        ms=0;
        idx=0;
        next_beat=0;
        running=0;
    }
    if (event_active(XB1_RB)) {
        ribbon_offset = ribbon_offset + 25;
    }
    if (event_active(XB1_LB)) {
        ribbon_offset = ribbon_offset - 25;
    }
    
    if (running) {
        ms_ribbon = ms + ribbon_offset;
        //advance until we reach the end or catch up with the time code
        while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
            idx++;
        }
        //if we've reached the end of the ribbon, releast LS
        if (idx>=maxIdx || angles[idx]== -1) {
            curAngle=-1;
        } else {
            curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
        }
        //set LS position if ribbon present
        if (curAngle>=0) { 
            fix32 y = sin(deg2rad((fix32)curAngle))*100f; // opposite
            fix32 x = cos(deg2rad((fix32)curAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG ribbon angle: %d, x: %d, y: %d", curAngle, x, y);
            }
            set_val(STICK_2_Y, y);
            set_val(STICK_2_X, x);
            
        }
        
        //shoot if we are on the beat
        if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
            next_beat+=1;
            combo_run(fire);
        }
        
        //swirl reticle if idle
        if (event_active(XB1_X)) { autoswirl = !autoswirl; }
        if ((autoswirl==1) && (get_val(XB1_RX)<=deadzone) && (get_val(XB1_RY)<=deadzone) && (get_val(XB1_RX)>=-deadzone) && (get_val(XB1_RY)>=-deadzone)) {
            fix32 aimAngle = mod((fix32)ms, 360f);
            fix32 rsX = sin(deg2rad(aimAngle))*100f; // opposite
            fix32 rsY = cos(deg2rad(aimAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG aim angle: %d, x: %d, y: %d", aimAngle, rsX, rsY);
            }
            set_val(STICK_1_Y, rsY);
            set_val(STICK_1_X, rsX);
        }
    }
}

combo fire {
    set_val(XB1_RT,100);wait(50);
}