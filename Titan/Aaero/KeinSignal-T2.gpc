#pragma METAINFO("Aaero: I Can't Stop", 1, 0, "Palesius, Parker")
#include <xb1.gph>
#include "../common/ColorLED.gph"

const int32 times[] = {0,29530,30030,30180,30230,30297,30531,30645,30646,30647,30649,30650,30781,30864,30998,31198,31265,31298,31648,31882,32099,32210,32211,32316,32366,32449,32466,32933,33150,33250,33483,33717,33760,33761,33834,33917,34067,34201,35035,35169,35235,35452,35569,35650,35651,35652,35653,35654,35802,35853,36036,36203,36270,36403,36520,36787,36904,37020,37087,37171,37471,37971,37972,39523,40023,40174,40207,40307,40574,40657,40807,40841,40974,41291,41608,41892,42075,42208,42209,42292,42426,42543,42910,43143,43343,43791,43792,43794,44695,44695,44696,44711,45045,45162,45245,45412,45562,45646,45779,45896,46113,46196,46280,46597,46930,47080,47212,47213,47314,47347,47431,47931,47932,49533,50033,50167,50250,50434,50584,50649,50650,50651,50652,50653,50784,50868,51018,51201,51285,51435,51468,51535,51935,52817,52818,53203,53737,53954,54037,55038,55155,55255,55405,55589,55656,55789,55889,56006,56223,56273,56406,56440,56473,56540,57040,57041,59527,60027,60194,60227,60327,60661,60794,60878,61061,61195,61278,61595,61895,62145,62220,62221,62296,62446,62713,63163,63297,63794,63795,63797,64698,64698,64699,64715,65032,65182,65215,65365,65566,65649,65682,65782,65866,66016,66200,66283,66633,66900,67067,67215,67216,67217,67317,67351,67451,67951,67952,79530,80030,80614,80681,80714,80747,80781,81248,81331,81448,82332,82561,82562,82566,82666,82667,83166,83350,83800,83884,83901,84968,84984,84985,84985,85652,85653,85654,85686,85719,85752,85769,86236,86420,86486,87337,87571,88155,88338,88805,88872,88906,89973,89990,90657,90707,90724,90757,90774,91258,91458,92342,92571,92572,92576,92651,92652,93177,93343,93810,93894,93911,94962,94977,94978,94978,95149,95150,95662,95729,95746,95762,96246,96396,96480,97331,97564,98165,98348,98815,98866,98916,99666,99683,99733,99983,100000,100667,100717,100734,100751,100784,101251,101335,101468,102336,102564,102565,102569,102719,102720,103170,103353,103787,103921,104905,104921,104922,104922,105013,105014,105656,105706,105722,105739,105772,106256,106423,106490,107341,107574,108175,108342,108876,109376,109377,129530,130030,130147,130230,130364,130564,130614,130664,130781,130881,131098,131198,131281,131632,131882,132149,132207,132208,132316,132366,132516,132866,133133,133317,133584,133763,133764,133784,133851,133867,133967,134151,134218,135035,135152,135252,135502,135652,135786,135869,136053,136186,136270,136403,136486,136653,136803,136904,137037,137137,137171,137471,137971,137972,139523,140023,140157,140257,140490,140657,140807,140824,140924,141124,141208,141275,141608,141892,142159,142206,142207,142342,142426,142609,142943,143143,143343,143791,143792,143794,144695,144695,144696,144711,145028,145162,145229,145395,145596,145644,145645,145646,145648,145649,145779,145846,145996,146246,146280,146613,146880,147080,147207,147208,147331,147364,147447,147947,147948,149533,150033,150167,150200,150284,150467,150634,150649,150650,150651,150652,150653,150817,150851,150984,151201,151268,151401,151435,151468,151535,151935,152811,152812,153220,153737,154004,154037,155038,155138,155222,155372,155589,155637,155638,155639,155641,155642,155772,155806,155839,155906,156073,156223,156273,156406,156490,156540,157040,157041,159527,160027,160160,160210,160310,160527,160644,160777,160811,160844,161011,161245,161278,161662,161912,162162,162217,162218,162312,162346,162479,162980,163146,163313,163580,163777,163778,163780,164014,164514,164515,164532,165032,165148,165182,165215,165365,165566,165649,165782,165849,165966,166216,166266,166583,166884,167067,167184,167210,167211,167284,167401,167467,167967,167968};
const int angles[] = {-1,180,180,220,244,268,324,359,0,0,0,359,328,291,250,206,185,183,234,274,326,359,0,31,56,80,90,177,221,252,302,346,359,0,22,72,124,157,182,220,249,309,334,359,0,0,0,359,319,292,240,202,180,215,262,326,358,330,300,270,270,270,-1,180,180,220,236,272,336,359,318,300,258,181,226,276,320,359,0,24,75,104,171,221,274,359,0,0,0,0,359,182,185,216,251,300,332,359,326,278,222,206,182,223,286,320,359,0,30,48,74,74,-1,183,183,215,254,304,339,359,0,0,0,359,325,291,248,205,182,221,240,264,276,359,0,36,94,158,188,183,214,256,296,341,359,324,282,250,198,180,215,226,244,266,266,-1,180,180,226,244,277,356,324,286,236,206,181,224,279,337,359,0,22,82,133,226,264,359,0,0,0,0,359,180,180,222,240,288,332,352,352,328,290,246,203,182,230,279,318,359,0,0,31,48,83,83,-1,180,180,184,196,208,247,270,270,298,331,333,359,0,0,0,359,357,331,329,306,298,301,359,0,0,0,0,359,346,318,285,270,270,216,209,207,180,180,209,212,230,242,239,181,180,204,219,258,270,273,331,333,359,0,0,0,359,356,331,328,308,298,301,359,0,0,0,359,358,330,306,272,270,224,209,207,180,182,209,212,222,240,239,250,239,239,180,182,204,219,242,270,270,300,331,333,359,0,0,0,359,358,331,332,300,301,359,0,0,0,359,356,340,334,318,270,266,217,209,207,180,184,209,209,209,-1,181,181,208,247,286,332,347,355,328,284,226,204,180,231,275,341,359,0,34,56,100,164,220,270,320,359,0,4,34,51,93,147,156,185,212,256,320,358,323,288,237,209,180,212,249,298,328,358,326,282,270,270,270,-1,181,181,213,256,318,358,318,304,272,223,202,182,226,279,344,359,0,44,75,116,180,222,274,359,0,0,0,0,359,181,181,215,247,296,343,359,0,0,0,359,328,296,250,190,181,229,276,322,359,0,36,54,79,79,-1,184,184,216,234,264,312,355,359,0,0,0,359,313,296,254,207,179,213,224,242,264,277,359,0,38,94,177,183,184,208,244,290,341,359,0,0,0,359,328,318,300,276,233,196,182,213,250,269,269,-1,182,182,214,238,273,324,358,326,314,297,246,190,180,236,282,343,359,0,28,46,90,188,224,268,320,359,0,0,0,0,-1,181,181,213,224,242,286,333,358,326,297,259,199,180,222,273,320,352,359,0,20,66,86,86,-1};
int maxIdx = 546;
int bpm=96;
int ribbon_offset=0;

int32 ms=0;
int32 ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=1;
fix32 deadzone=5f; //deadzone for autoswirl set negative to disable

init {
    beat_anticipate=60000/(bpm*4);
}

main {
    ms+=elapsed_time();
    // Start / Reset
    if (get_val(XB1_VIEW) && event_active(XB1_A)) {
        ColorLED(CG);
        ms=0;
        idx=0;
        next_beat=0;
        running=1;
    }
    // Quit
    if (event_active(XB1_B)) {
        ColorLED(CR);
        ms=0;
        idx=0;
        next_beat=0;
        running=0;
    }
    if (event_active(XB1_RB)) {
        ribbon_offset = ribbon_offset + 25;
    }
    if (event_active(XB1_LB)) {
        ribbon_offset = ribbon_offset - 25;
    }
    
    if (running) {
        ms_ribbon = ms + ribbon_offset;
        //advance until we reach the end or catch up with the time code
        while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
            idx++;
        }
        //if we've reached the end of the ribbon, releast LS
        if (idx>=maxIdx || angles[idx]== -1) {
            curAngle=-1;
        } else {
            curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
        }
        //set LS position if ribbon present
        if (curAngle>=0) { 
            fix32 y = sin(deg2rad((fix32)curAngle))*100f; // opposite
            fix32 x = cos(deg2rad((fix32)curAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG ribbon angle: %d, x: %d, y: %d", curAngle, x, y);
            }
            set_val(STICK_2_Y, y);
            set_val(STICK_2_X, x);
            
        }
        
        //shoot if we are on the beat
        if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
            next_beat+=1;
            combo_run(fire);
        }
        
        //swirl reticle if idle
        if (event_active(XB1_X)) { autoswirl = !autoswirl; }
        if ((autoswirl==1) && (get_val(XB1_RX)<=deadzone) && (get_val(XB1_RY)<=deadzone) && (get_val(XB1_RX)>=-deadzone) && (get_val(XB1_RY)>=-deadzone)) {
            fix32 aimAngle = mod((fix32)ms, 360f);
            fix32 rsX = sin(deg2rad(aimAngle))*100f; // opposite
            fix32 rsY = cos(deg2rad(aimAngle))*100f; // adjacent
            if (mod((fix32)ms, 100f)==(fix32)0) {
//                 printf("DEBUG aim angle: %d, x: %d, y: %d", aimAngle, rsX, rsY);
            }
            set_val(STICK_1_Y, rsY);
            set_val(STICK_1_X, rsX);
        }
    }
}

combo fire {
    set_val(XB1_RT,100);wait(50);
}