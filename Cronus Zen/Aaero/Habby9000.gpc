const int32 times[] = {0,41192,41692,42517,42518,43343,43610,43927,44211,44238,44239,44244,44245,44246,44278,44311,44344,44378,44394,44411,44428,44444,44478,44511,44528,44545,44578,44595,44645,44661,44678,44695,44728,44745,44778,44811,44828,44845,44928,44945,44978,44995,45045,45095,45112,45896,46380,46446,46763,46813,46997,47047,47064,47664,47731,47814,47831,47848,47865,47898,47931,47948,47981,47998,48031,48048,48081,48098,48148,48165,48198,48215,48248,48265,48298,48332,48432,48465,48482,48529,48530,48532,49983,49983,49984,50000,50017,50050,50450,50467,50484,50601,50677,50678,50684,51468,51685,51685,51686,51702,51752,52336,52519,52601,52602,52603,52886,52887,53170,53253,53278,53279,53287,53353,53354,53420,53437,53453,53470,53820,53887,53904,54087,54538,54571,54638,54755,54771,54776,54777,54805,54821,54838,54922,54938,54955,54972,55005,55022,55038,55055,55072,55105,55272,55305,55339,55355,55389,55489,55589,56607,56623,56640,56790,56807,56857,56874,57040,57074,57257,57274,57508,57524,57558,57574,57591,57608,57641,57658,57674,57691,57708,57724,57741,57791,57808,57824,57841,57875,57891,57908,57925,57941,57958,57975,57991,58025,58058,58075,58091,58125,58141,58175,58208,58292,58342,58358,58389,58390,58442,58458,58475,58492,58509,58525,58542,58559,58575,58592,58609,58625,58642,58659,58675,58692,58709,58725,58742,58775,58792,60911,60944,60961,60978,60994,61028,61044,61061,61078,61094,61144,61161,61178,61195,61211,61228,61245,61278,61295,61311,61328,61345,61378,61395,61445,61461,61495,61545,61578,61612,61628,61662,61712,61728,61760,61761,61762,61795,61828,61845,61862,61879,61929,61945,61962,61979,61995,62029,62045,62062,62079,62112,62129,62179,62196,62229,62246,62379,62396,62446,64781,64815,64831,64848,64882,64898,64915,64932,64965,64982,64998,65015,65048,65065,65082,65098,65249,65265,66250,66266,67100,67234,67267,67284,67584,67784,68151,68651,68652,116617,117117,117175,117176,117234,117234,117235,117284,117317,117334,117518,117526,117527,117534,117668,117751,118189,118190,118335,118336,118337,118418,118986,119203,119253,119461,119462,119670,119686,119720,119786,119803,119820,119870,119887,119920,119953,119970,119987,120020,120053,120070,120087,120120,120153,120187,120237,120270,120287,120320,120337,120354,120387,120404,120504,120537,121805,121822,121839,123073,123106,123140,123207,123223,123240,123290,123307,123340,123373,123407,123423,123440,123473,123524,123540,123574,123590,123624,123640,123690,123707,123740,123774,123790,123807,123857,123907,123941,123960,123961,123974,125375,125376,125377,125475,126026,126059,126076,126107,126108,126109,127077,127078,127079,127194,127945,128026,128027,128028,128862,128862,128863,128879,128996,129246,129263,129279,129313,129329,129746,129930,129963,129980,129997,130013,130030,130063,130080,130113,130147,130203,130204,130214,130247,130264,130330,130347,130364,130380,130397,130414,130430,130447,130480,130547,130597,130747,130764,130781,130831,130931,131014,131164,131181,131215,131648,131682,132049,132065,132282,132299,132683,132699,132883,132950,132966,132983,133016,133033,133083,133116,133133,133150,133200,133233,133250,133267,133283,133300,133317,133333,133350,133367,133383,133400,133433,133450,133483,133500,133534,133550,133584,133600,133634,133650,133700,133717,133784,133800,133814,133815,133851,133867,133901,133917,133951,133967,133984,134001,134017,134034,134067,134084,134101,134117,134251,135485,135502,135519,135903,135936,135953,136336,136370,136386,136403,136436,136453,136486,136503,136537,136553,136570,136587,136603,136620,136637,136653,136670,136687,136703,136720,136737,136753,136787,136820,136837,136870,136887,136904,136920,136954,136970,136987,137054,137104,137137,137154,137185,137186,137187,137237,137254,137271,137371,137387,137421,137437,137454,137471,137487,137504,137521,137538,137554,137588,137604,137621,137638,137671,137821,137871,140224,140240,140257,140290,140307,140324,140340,140374,140390,140407,140424,140457,140474,140490,140541,140641,140674,141391,141608,141708,141725,141742,142676,143010,143410,143443,143460,143594,144094,144095}
const int16 angles[] = {-1,358,358,359,0,1,0,2,2,0,359,359,359,0,12,20,26,36,38,44,48,49,58,63,68,70,78,80,92,94,98,100,108,110,118,122,126,128,146,147,155,157,168,176,180,179,179,180,180,180,179,182,179,178,192,208,212,214,220,226,236,238,248,250,260,262,270,272,284,286,296,297,306,308,316,320,340,346,348,359,0,0,0,0,359,346,328,331,332,333,331,332,359,0,2,2,0,0,359,348,331,331,331,359,0,0,0,359,359,358,359,0,0,0,359,359,298,298,301,302,300,302,301,302,311,323,356,358,359,0,8,10,16,34,42,46,52,58,64,68,73,76,86,124,130,138,140,148,148,120,118,116,90,90,102,102,148,146,148,148,90,90,94,110,114,120,124,138,142,149,152,162,166,176,194,198,205,210,232,238,250,254,264,272,276,278,286,292,296,298,306,308,316,320,339,350,352,359,0,12,14,18,20,24,26,32,35,42,44,50,52,57,60,64,67,72,74,78,84,90,90,94,98,106,110,124,128,134,137,146,164,171,176,186,190,197,201,213,226,232,244,250,270,272,286,288,298,308,317,322,327,334,348,350,359,0,0,9,19,22,27,30,46,50,55,58,64,70,76,78,84,90,96,104,110,116,120,120,118,90,90,94,98,100,108,110,114,116,123,125,129,130,138,140,145,146,177,180,180,118,118,119,116,119,119,118,118,118,-1,0,0,0,359,359,359,0,29,33,30,32,0,359,331,331,358,359,0,0,0,359,330,330,330,359,359,0,0,2,12,26,30,33,48,50,58,65,70,72,80,86,90,92,100,106,114,120,128,130,136,138,144,149,154,172,180,180,182,180,180,182,189,200,204,206,216,222,228,238,246,251,253,262,273,275,283,285,294,295,308,310,318,322,326,328,340,349,356,359,0,2,0,0,359,330,330,334,349,359,0,0,0,0,359,330,331,359,0,0,0,0,359,301,300,301,298,300,298,301,302,302,302,306,310,312,318,323,328,335,346,359,0,2,14,16,34,36,44,46,52,55,60,63,73,90,100,134,136,142,148,148,118,118,117,119,118,119,118,90,90,148,148,90,90,96,104,108,122,125,142,156,161,169,188,198,206,211,220,228,240,250,256,265,272,274,282,284,292,294,303,305,314,316,322,324,336,338,354,356,359,0,8,10,18,20,27,32,35,42,44,50,54,60,62,68,90,90,88,90,89,88,90,90,92,100,104,118,122,134,138,151,156,166,170,180,184,193,196,204,208,219,224,236,242,262,273,276,286,288,294,296,306,308,312,326,338,348,350,359,0,0,14,18,20,51,54,64,67,72,74,80,82,88,90,96,102,106,110,114,120,120,90,90,95,96,105,106,111,113,121,122,126,128,136,138,143,152,173,181,180,179,179,118,120,119,119,118,118,120,120,120,-1}
int maxIdx = 620;
int bpm=140;
int ribbon_offset=-300;

//deadzone for autoswirl set negative to disable
int deadzone=5;
int ms=0;
int ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=0;

init {
	beat_anticipate=60000/(bpm*4);
}

main {
	ms+=get_rtime();
	if (get_val(XB1_VIEW)>0 && event_press(XB1_A)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=1;
		putc_oled(1,82);
		putc_oled(2,117);
		putc_oled(3,110);
		puts_oled(40,20,2,3,1);
	}
	if (event_press(XB1_B)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=0;
		putc_oled(1,83);
		putc_oled(2,116);
		putc_oled(3,111);
		putc_oled(4,112);
		puts_oled(30,20,2,4,1);
	}
	if (event_press(XB1_RB)) {ribbon_offset = ribbon_offset + 25;set_val(TRACE_1,ribbon_offset);}
	if (event_press(XB1_LB)) {ribbon_offset = ribbon_offset - 25;set_val(TRACE_1,ribbon_offset);}
	
	if (running) {
		set_val(TRACE_2,ms);
		ms_ribbon = ms + ribbon_offset;
		//advance until we reach the end or catch up with the time code
		while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
			idx++;
		}
		//if we've reached the end of the ribbon, releast LS
		if (idx>=maxIdx || angles[idx]== -1) {
			curAngle=-1;
		} else {
			curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
		}
		//set LS position if ribbon present
		if (curAngle>=0) set_polar(POLAR_LS,curAngle,32767);

		//shoot if we are on the beat
		if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
			next_beat+=1;
			combo_run(fire);
		}

		//swirl reticle if idle
		if (event_press(XB1_X)) {if (autoswirl==0) {autoswirl=1} else {autoswirl=0}}
		if (autoswirl==1 && get_val(XB1_RX)<=deadzone && get_val(XB1_RY)<=deadzone && get_val(XB1_RX)>=-deadzone && get_val(XB1_RY)>=-deadzone) {set_polar(POLAR_RS,ms%360,32767);}
	}
}

combo fire {
	set_val(XB1_RT,100);wait(50);
}