const int32 times[] = {0,10995,11495,11645,11662,11712,11745,11812,11845,12062,12079,12095,12129,12145,12229,13330,13347,13363,13497,13714,14715,15215,15216,16467,16967,17000,17134,17150,17167,17184,17201,17251,17284,17334,17634,17718,18151,18252,18268,18819,18836,18852,18869,19102,19269,19286,19353,20187,20687,20688,21789,22289,22439,22456,22489,22623,22639,22656,22723,22739,22756,22823,23173,23323,24358,24441,24458,24474,24491,24508,24942,25058,26376,26876,26877,26927,27427,27511,27594,27611,27778,28762,28779,28795,28879,28962,29062,29079,29096,30981,31481,31482,32416,32916,32933,32983,33000,33083,33100,33483,33617,33750,34134,34318,34334,34368,34801,34818,34885,34918,35402,35419,36453,36920,36937,36970,38488,38505,38539,38572,38587,38588,38589,39056,39072,39073,39089,39105,39106,39122,39173,39206,39223,39256,39273,39423,39431,39432,39439,39456,39457,39473,39723,39756,39757,39790,39856,39857,39923,40106,40107,40290,40324,40340,40390,40407,40440,40457,40707,40724,40741,40824,42492,42992,42993,43394,43894,43911,43961,44077,44444,44446,44447,44595,45279,45295,45329,45345,45729,45746,46046,46296,46630,46663,46697,46713,47614,48065,48115,48182,48515,48682,48799,48866,49199,49366,49433,49483,49533,49550,49900,50050,50150,50167,50184,50200,50234,50567,50734,50801,50918,51335,51435,51485,51535,51735,51802,51818,51835,51869,53387,53403,53470,53487,53587,53604,53637,53654,54087,54171,54221,54288,54488,54538,54555,54571,54605,54621,54638,54655,54838,54855,55138,55289,55372,55472,55539,56540,57040,57041,59860,60360,60360,60860,60861,62596,63096,63096,63596,63597,65349,65849,65849,66349,66350,68069,68569,68569,69069,69070,70821,71321,71321,71821,71822,73574,74074,74074,74574,74575,98766,99266,99466,99483,99516,99533,99540,99541,99583,99616,99850,99917,99967,100057,100058,100067,101101,101118,101134,101351,101385,101485,102486,102986,102987,104422,104922,104938,104988,105008,105009,105022,105055,105105,105405,105487,105488,105489,106590,106607,106890,106974,107958,108458,108459,109744,110244,110394,110427,110444,110460,110477,110493,110494,110594,110744,110761,110794,110861,110894,110910,110911,110911,111411,111428,111762,112112,112113,112114,112179,112196,112246,112262,112696,112713,112729,112746,112846,113113,113163,113180,113213,113228,113229,113230,114515,115232,116550,116650,116733,117217,117234,117251,118752,119252,119253,120187,120687,120721,120737,120787,120804,120871,121171,121255,121288,121314,121315,121388,121788,121822,121855,122072,122089,122105,122122,122139,122556,122573,122606,122623,122773,126226,126276,126293,126326,126343,126860,126960,126977,127010,127027,127194,127945,128061,128095,128111,128145,128178,128195,128228,128462,128595,130264,130764,130765,131165,131665,131682,131698,131748,131765,131815,131832,132232,132266,132282,132382,132883,133050,133066,133083,133100,133500,133517,133834,134062,134063,134067,134384,134392,134393,134401,134402,134403,134418,134434,134451,134484,135385,135769,135853,135886,135936,135969,136286,136453,136553,136570,136603,136637,136970,137120,137254,137321,137654,137671,137821,137921,137955,137971,138021,138355,138522,138605,138689,139056,139206,139250,139251,139256,139306,139556,139590,139606,139638,139639,139640,141158,141175,141341,141375,141425,141441,141959,141967,141968,141975,142042,142059,142309,142326,142376,142463,142464,142492,142526,142559,143060,143143,143243,143310,144311,144811,144812,146263,146763,146763,147263,147264,148999,149499,149499,149999,150000,151736,152236,152236,152736,152737,154488,154988,154988,155488,155489,157224,157724,157724,158224,158225,159960,160460,160460,160960,160961}
const int16 angles[] = {-1,148,148,149,150,164,179,198,210,208,206,208,208,208,180,180,118,120,120,148,148,148,-1,147,147,148,150,150,154,163,169,183,196,208,208,180,180,187,180,180,158,118,120,120,140,144,148,148,148,-1,148,148,148,147,148,150,150,158,179,186,192,208,208,180,180,206,212,228,241,239,239,208,208,208,-1,148,148,148,158,148,148,148,148,149,148,120,120,118,120,120,120,-1,148,148,154,160,164,177,180,180,209,210,209,232,248,270,270,283,316,332,332,330,332,332,333,332,332,333,346,355,359,0,0,0,0,359,359,359,0,0,0,1,0,0,0,0,0,359,359,359,0,0,0,0,359,359,359,0,0,0,359,359,352,344,332,322,310,301,301,311,319,332,332,332,-1,31,31,26,18,0,0,0,359,331,330,298,272,270,270,208,208,180,178,170,155,148,148,119,122,149,148,120,120,148,148,120,120,124,146,148,148,120,120,118,128,147,149,148,120,120,148,150,151,182,208,208,201,196,193,180,180,116,116,120,120,127,146,149,150,150,181,208,208,205,200,190,180,180,180,180,180,182,181,180,150,150,120,120,120,-1,295,295,295,295,-1,225,225,225,225,-1,295,295,295,295,-1,315,315,315,315,-1,64,64,64,64,-1,246,246,246,246,-1,32,32,30,30,10,2,0,359,346,332,331,332,355,359,0,0,0,62,60,60,58,31,32,32,-1,30,30,25,5,0,359,356,344,331,332,359,0,0,0,60,60,32,32,32,-1,32,32,32,23,19,10,4,0,359,332,330,330,332,332,341,359,0,0,0,0,0,0,0,359,342,334,314,302,301,300,310,328,332,332,335,340,354,359,0,0,1,32,32,32,60,62,62,60,60,60,-1,30,30,26,21,14,10,0,0,0,10,0,359,330,331,330,331,330,316,286,276,270,270,258,243,230,208,208,205,200,186,180,180,180,180,180,180,180,180,182,190,194,206,214,226,239,239,208,208,208,-1,150,150,152,157,164,168,176,180,180,189,203,208,210,216,232,258,270,270,332,332,359,0,0,0,0,359,359,359,0,4,14,18,32,32,61,61,55,33,32,32,60,60,54,34,32,32,61,60,32,32,22,60,60,54,34,32,32,62,60,32,30,26,0,359,356,332,332,345,348,359,0,0,0,60,60,57,34,32,32,0,359,334,334,330,332,342,358,359,0,0,2,0,0,32,32,60,60,60,-1,270,270,270,270,-1,213,213,213,213,-1,270,270,270,270,-1,328,328,328,328,-1,90,90,90,90,-1,270,270,270,270,-1}
int maxIdx = 554;
int bpm=175;
int ribbon_offset=0;

//deadzone for autoswirl set negative to disable
int deadzone=5;
int ms=0;
int ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=0;

init {
	beat_anticipate=60000/(bpm*4);
}

main {
	ms+=get_rtime();
	if (get_val(XB1_VIEW)>0 && event_press(XB1_A)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=1;
		putc_oled(1,82);
		putc_oled(2,117);
		putc_oled(3,110);
		puts_oled(40,20,2,3,1);
	}
	if (event_press(XB1_B)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=0;
		putc_oled(1,83);
		putc_oled(2,116);
		putc_oled(3,111);
		putc_oled(4,112);
		puts_oled(30,20,2,4,1);
	}
	if (event_press(XB1_RB)) {ribbon_offset = ribbon_offset + 25;set_val(TRACE_1,ribbon_offset);}
	if (event_press(XB1_LB)) {ribbon_offset = ribbon_offset - 25;set_val(TRACE_1,ribbon_offset);}
	
	if (running) {
		set_val(TRACE_2,ms);
		ms_ribbon = ms + ribbon_offset;
		//advance until we reach the end or catch up with the time code
		while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
			idx++;
		}
		//if we've reached the end of the ribbon, releast LS
		if (idx>=maxIdx || angles[idx]== -1) {
			curAngle=-1;
		} else {
			curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
		}
		//set LS position if ribbon present
		if (curAngle>=0) set_polar(POLAR_LS,curAngle,32767);

		//shoot if we are on the beat
		if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
			next_beat+=1;
			combo_run(fire);
		}

		//swirl reticle if idle
		if (event_press(XB1_X)) {if (autoswirl==0) {autoswirl=1} else {autoswirl=0}}
		if (autoswirl==1 && get_val(XB1_RX)<=deadzone && get_val(XB1_RY)<=deadzone && get_val(XB1_RX)>=-deadzone && get_val(XB1_RY)>=-deadzone) {set_polar(POLAR_RS,ms%360,32767);}
	}
}

combo fire {
	set_val(XB1_RT,100);wait(50);
}