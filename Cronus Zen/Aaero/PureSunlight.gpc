const int32 times[] = {0,21188,21688,21972,22022,22039,22105,22139,22523,22573,22639,22656,22714,22715,22723,22739,22789,22806,22873,23223,23240,23257,23290,23307,23357,23815,23816,24274,24324,24341,24408,24424,24541,24558,24942,24958,24975,25175,25225,25275,27444,27944,27945,30081,30581,30831,30848,30864,30898,30948,31064,31098,31181,31665,31698,31715,31732,31798,31832,31899,31915,31982,32266,32299,32366,32432,32766,32799,32816,32833,32866,32883,32933,33400,33467,33483,33534,33550,33700,34284,34301,34368,34401,34451,34484,34518,34568,36603,37103,37104,37988,38488,38839,38856,38889,38956,38972,38989,39022,39239,39273,39289,39306,39640,39656,39990,40023,40073,40140,41491,41508,41975,41992,42009,42059,42075,42142,42276,42342,42426,42442,42759,42876,42893,42910,42943,42960,43010,43026,43076,43093,43143,43160,43210,43227,43260,43277,43293,43327,43343,43427,43451,43452,43460,43777,43994,44011,44027,44144,44545,44561,44611,44645,44704,44705,44711,44736,44737,44745,46330,46830,46831,47498,47998,48382,48388,48389,48432,48532,48582,49149,49199,49216,49233,49249,49266,49283,50651,50666,50667,50667,51101,51104,51105,51301,51451,51602,51618,51702,52536,52553,52586,52636,52669,52769,52803,52853,53687,53720,53820,53837,53904,53954,53971,54004,54555,57140,57174,57257,57274,57291,57307,57541,57558,57591,57608,57958,57975,58275,58292,58342,58425,59776,59793,60227,60327,60377,60394,60427,60561,60577,60594,60644,60694,61111,61178,61195,61211,61261,61278,61361,61378,61428,61445,61478,61545,61562,61578,61628,61695,61710,61711,61712,62246,62296,62362,62396,62429,62846,62863,62963,62996,64631,65131,65132,65783,66283,66717,66720,66721,66767,66884,67434,67501,67518,67534,67551,67568,68936,68951,68952,68952,69419,69421,69422,69586,69736,69770,69803,69820,69853,69870,69937,69953,69987,70854,70954,71021,71071,71154,71972,71989,72005,72072,72089,72139,72155,72172,72206,72222,72239,72289,75409,75425,75459,75492,75576,75592,75609,75809,75843,75859,75893,76126,76143,76543,76560,76643,76710,78061,78078,78245,78278,78529,78595,78612,78662,78712,78846,78862,78879,78962,78996,79363,79379,79429,79479,79496,79546,79563,79613,79630,79680,79696,79763,79780,79830,79847,79897,79913,79963,79995,79996,79997,80714,80714,80715,80731,81465,81481,82115,82123,82124,82132,82266,82766,82767,82900,83400,83400,83900,83901,84035,84535,85118,85135,86069,86069,86070,86086,86687,86695,86696,86703,86820,87320,87321,87471,87971,87971,88471,88472,88606,89106,89656,89673,89940,90440,90441,90474,90974,91258,91266,91267,91275,91391,91891,91892,92026,92526,92526,93026,93027,93160,93660,94244,94261,94528,95028,95029,95046,95546,95829,95837,95838,95846,95963,96463,96464,96597,97097,97097,97597,97598,97732,98232,98815,98832,99766,99783,100100,100600,100601,101152,101652,101652,102152,102153,102303,102803,103387,103391,103392,103403,104321,104338,104638,105138,105139,105740,106240,106240,106740,106741,106874,107374,107941,107949,107950,107958,108892,108909,109226,109726,109727,110294,110794,110794,111294,111295,111445,111945,112496,112508,112509,112513,112779,113279,113280,113297,113797,113797,114297,114298,114865,115365,115365,115865,115866,116000,116500,117084,117100,117367,117867,117868,117885,118385,118802,119302,119303,119437,119937,119937,120437,120438,120588,121088,121655,121672,122606,122614,122615,122623,123373,123873,123874,124008,124508,124508,125008,125009,125159,125659,126226,126243,127177,127193,127194,127194,127945,128445,128446,128579,129079,129079,129579,129580,129730,130230,130797,130814,131732,131748,132533,133033,133034,133167,133667,133667,134167,134168,136637,137137,137487,137538,137588,137604,137638,137721,138071,138121,138138,138172,138205,138222,138238,138272,138422,138438,138455,138572,138655,138705,138722,138755,138772,138805,138856,139173,139239,139256,139306,139323,139339,139356,139389,139423,139690,139740,139790,139890,140007,140357,140407,140440,140524,140557,142359,142376,142409,142559,142576,143076,143077,145780,146280,146446,146447,146613,146647,146697,146864,147214,147231,147347,147364,147414,147764,147814,147848,147898,147915,147965,148015,148365,148398,148415,148565,148590,148591,148599,148765,148766,148932,149016,149032,149066,149149,149499,149516,149533,149566,149600,149616,149650,149711,149712,149716,150851,150984,151735,152235,152236,154572,155072,155422,155439,155455,155539,155556,155589,155839,155856,155889,156223,156240,156273,156306,156557,156607,156640,156723,158058,158075,158542,158559,158609,158625,158692,158842,158942,158992,159376,159443,160010,160043,160060,160093,160110,160127,160177,160194,160244,160260,160394,160527,160544,160561,160644,160677,160777,160811,160844,160894,160928,160944,160978,161011,161028,161061,161128,161153,161154,161178,163380,163880,163881,164065,164565,164998,164999,165000,165032,165098,165148,165716,165766,165782,165799,165816,165832,165849,167217,167233,167234,167234,167701,167703,167704,167751,167768,167835,167851,168018,168051,168085,168185,168235,168268,169119,169186,169219,169253,169269,169319,169353,169403,170254,170437,170454,170487,170537,170571,173524,174024,174025,174408,174908,175392,175409,175626,176126,176127,176694,177194,177477,177494,177628,178128,178129,179113,179613,180013,180030,180214,180714,180715,181265,181765,182049,182065,182199,182699,182700,183551,184051,184535,184551,184768,185268,185269,185836,186336,186620,186637,186770,187270,187271,188272,188772,189156,189173,189356,189856,189857,191492,191992,192409,192411,192412,192492,192543,192576,193143,193160,193193,193210,193260,194645,194660,194661,194661,195128,195131,195132,195162,195195,195262,195295,195429,195479,195495,195512,195546,195562,195579,195646,195662,195729,196547,196613,196647,196663,196713,196747,196797,196813,197681,197731,197748,197764,197831,197848,197865,197915,197948,197998,198015,201134,201185,201268,201285,201301,201552,201602,201835,201852,202269,202336,202386,202419,203770,203787,204221,204254,204354,204404,204538,204555,204571,204588,204671,204705,205055,205138,205155,205172,205205,205289,205389,205455,205489,205539,205556,205572,205589,205622,205639,205672,205704,205705,205706,206223,206290,206323,206373,206406,206440,206840,206857,206924,206974,208625,209125,209126}
const int16 angles[] = {-1,61,61,60,52,48,38,32,31,28,16,10,0,359,358,353,346,340,331,330,334,340,346,352,359,359,0,0,5,8,14,18,30,32,30,28,26,10,4,0,0,0,-1,180,180,181,182,172,166,148,149,150,180,180,183,180,186,196,204,215,221,238,240,232,222,208,208,206,203,198,192,186,180,179,176,172,166,166,148,149,156,167,176,185,194,197,208,209,209,-1,180,180,181,182,193,210,214,226,239,239,234,225,208,209,148,149,156,167,180,180,119,120,123,128,134,138,148,150,162,182,179,180,212,220,222,233,242,255,262,274,280,290,296,306,312,318,320,326,332,340,358,359,0,0,1,0,4,10,32,30,30,22,13,0,359,358,359,0,0,0,0,-1,0,0,0,0,359,356,340,331,330,319,317,310,306,299,301,301,359,0,0,0,0,359,331,330,314,310,301,301,298,297,292,288,277,272,270,270,262,236,226,212,196,192,180,181,180,193,214,222,242,240,240,234,216,209,209,148,149,151,162,180,180,120,120,132,139,144,149,148,151,156,166,180,180,220,223,230,244,253,272,280,290,294,304,318,320,326,336,355,359,0,0,0,4,17,22,32,32,27,8,0,0,0,-1,0,0,0,0,359,352,331,330,318,310,306,299,301,301,359,0,0,0,0,359,331,330,327,322,320,318,314,308,304,301,300,288,281,274,270,270,267,258,242,234,223,221,213,206,201,193,180,180,182,191,198,230,241,239,239,234,224,209,210,147,150,150,165,180,180,118,118,120,120,128,133,139,148,148,151,157,172,180,181,182,209,220,230,244,252,264,272,282,288,302,308,318,322,332,340,351,359,0,0,0,0,359,184,184,90,90,0,359,270,270,270,-1,90,90,90,90,-1,184,184,184,356,356,359,0,90,90,0,359,270,270,270,-1,90,90,90,90,-1,356,356,356,184,184,184,-1,90,90,90,0,359,270,270,270,-1,90,90,90,90,-1,184,184,184,356,356,356,-1,90,90,90,0,359,270,270,270,-1,90,90,90,90,-1,356,356,356,184,184,90,90,90,-1,90,90,90,90,-1,45,45,45,0,359,225,225,135,135,135,-1,135,135,135,135,-1,90,90,90,0,359,270,270,184,184,184,-1,184,184,184,184,-1,135,135,135,0,359,315,315,315,-1,225,225,225,225,-1,225,225,225,225,-1,184,184,184,356,356,356,-1,270,270,270,270,-1,270,270,270,270,-1,225,225,225,45,45,0,359,315,315,315,-1,315,315,315,315,-1,270,270,270,90,90,0,359,356,356,356,-1,356,356,356,356,-1,315,315,315,135,135,45,45,45,-1,45,45,45,45,-1,180,180,180,186,193,194,199,209,210,214,220,222,230,232,236,239,239,236,239,238,234,228,224,221,221,216,209,210,205,202,194,194,190,189,184,180,181,181,182,195,209,208,202,196,186,180,181,178,180,179,180,180,-1,0,0,0,359,359,358,351,331,330,330,312,308,301,302,307,312,320,320,327,331,332,336,340,358,359,0,0,0,359,359,348,346,341,331,331,333,337,340,346,347,352,359,0,0,1,0,0,0,-1,180,180,180,185,193,214,226,239,239,224,209,209,147,147,148,148,158,168,180,180,120,120,124,131,136,148,149,167,180,180,209,210,217,224,228,234,242,252,258,266,271,284,298,298,302,310,314,323,327,330,334,339,340,344,346,350,352,359,359,0,0,0,0,-1,0,0,0,0,359,351,340,331,331,320,318,310,306,298,301,301,359,0,0,0,0,359,351,346,336,332,329,327,322,312,305,301,300,294,290,286,283,279,274,270,270,222,216,207,192,180,180,180,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,280,280,280,100,100,100,-1,0,0,0,0,359,346,337,332,331,328,319,318,301,301,359,0,0,0,0,359,355,347,336,331,331,326,326,320,318,318,314,308,304,301,301,293,290,287,283,278,274,270,270,256,252,244,229,222,220,206,194,182,180,180,194,222,228,239,239,209,209,149,149,161,174,180,180,120,120,122,139,149,149,147,150,156,172,180,180,207,210,215,228,255,283,297,308,318,318,326,328,334,344,350,359,0,0,0,4,10,22,33,32,31,26,13,0,0,0,-1}
int maxIdx = 945;
int bpm=105;
int ribbon_offset=0;

//deadzone for autoswirl set negative to disable
int deadzone=5;
int ms=0;
int ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=0;

init {
	beat_anticipate=60000/(bpm*4);
}

main {
	ms+=get_rtime();
	if (get_val(XB1_VIEW)>0 && event_press(XB1_A)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=1;
		putc_oled(1,82);
		putc_oled(2,117);
		putc_oled(3,110);
		puts_oled(40,20,2,3,1);
	}
	if (event_press(XB1_B)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=0;
		putc_oled(1,83);
		putc_oled(2,116);
		putc_oled(3,111);
		putc_oled(4,112);
		puts_oled(30,20,2,4,1);
	}
	if (event_press(XB1_RB)) {ribbon_offset = ribbon_offset + 25;set_val(TRACE_1,ribbon_offset);}
	if (event_press(XB1_LB)) {ribbon_offset = ribbon_offset - 25;set_val(TRACE_1,ribbon_offset);}
	
	if (running) {
		set_val(TRACE_2,ms);
		ms_ribbon = ms + ribbon_offset;
		//advance until we reach the end or catch up with the time code
		while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
			idx++;
		}
		//if we've reached the end of the ribbon, releast LS
		if (idx>=maxIdx || angles[idx]== -1) {
			curAngle=-1;
		} else {
			curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
		}
		//set LS position if ribbon present
		if (curAngle>=0) set_polar(POLAR_LS,curAngle,32767);

		//shoot if we are on the beat
		if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
			next_beat+=1;
			combo_run(fire);
		}

		//swirl reticle if idle
		if (event_press(XB1_X)) {if (autoswirl==0) {autoswirl=1} else {autoswirl=0}}
		if (autoswirl==1 && get_val(XB1_RX)<=deadzone && get_val(XB1_RY)<=deadzone && get_val(XB1_RX)>=-deadzone && get_val(XB1_RY)>=-deadzone) {set_polar(POLAR_RS,ms%360,32767);}
	}
}

combo fire {
	set_val(XB1_RT,100);wait(50);
}