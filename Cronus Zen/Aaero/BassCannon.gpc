const int32 times[] = {0,6374,6874,6940,6957,6974,7007,7024,7040,7057,7074,7090,7107,7157,7174,7191,7207,7224,7241,7291,7299,7300,7407,7424,7457,7708,7991,8242,8258,8475,8609,9176,9793,10360,10744,10911,10928,11178,11211,11428,11445,11478,11678,11712,11828,12396,12412,13714,13747,13764,13797,13814,13830,13864,13880,13914,13930,13980,13997,14031,14047,14064,14097,14114,14147,14247,14281,14514,14715,14815,14831,15098,15115,15265,15365,15382,15832,16933,17784,17868,17901,17934,17951,18001,18151,18185,18602,18802,19403,19403,19404,19419,19953,20587,20654,20671,20704,20721,20754,20771,20804,20821,20854,20871,20887,20904,20937,20954,20986,20987,20988,21188,21455,21655,21672,21955,21972,22172,22873,23323,23357,23540,23551,23552,23557,23657,23661,23662,23674,24207,24675,24725,24741,25008,25042,25459,25659,26259,26276,26927,27444,27511,27527,27561,27577,27611,27627,27661,27678,27711,27728,27744,27761,27778,27794,27811,27844,27978,28011,28278,28528,28562,28812,28829,29196,29980,30364,30380,30397,30797,30814,30831,31531,31581,31615,31865,31882,32149,32182,32249,32399,32432,32532,33032,33033,33784,34284,34301,34785,34801,34818,34851,34951,35035,36019,36036,36053,36086,36119,36136,36169,36203,36286,36770,36787,36837,36853,36887,36903,37004,37070,37104,37137,37154,37204,39389,39439,39473,39489,39506,39523,39556,39573,39639,41408,41422,41423,41425,46246,46263,46330,46346,46363,46378,46379,46380,46413,46430,46496,48265,48281,53153,53170,53186,53203,53236,53253,53270,53286,53320,53337,53353,55138,55152,55153,55155,59960,60460,60461,61212,61712,61745,61778,61795,61828,61845,61878,61895,61928,61945,61978,61995,62029,62045,62079,62095,62112,62143,62144,62145,62329,62562,62813,62829,63096,63113,63397,64047,64131,64147,64164,65015,65032,65048,65098,65198,65265,65816,65866,65882,66149,66183,66700,66817,67317,67318,68085,68585,68652,68669,68702,68719,68752,68769,68802,68819,68869,68885,68902,68919,68935,69002,69202,69403,69653,69670,69703,69836,69853,69886,69953,69970,70387,70804,72122,72673,72723,72739,73006,73040,73540,73590,73674,74174,74175,74959,75459,75509,75525,75542,75575,75592,75609,75642,75659,75709,75726,75742,75759,75776,75792,75809,75857,75858,75859,75993,76026,76259,76526,76543,76810,76827,77544,77844,77861,77878,78562,79496,79579,79596,79863,80397,80514,81014,81015,81782,82282,82299,82366,82382,82416,82432,82466,82482,82516,82532,82566,82582,82616,82632,82649,82666,82699,82816,82849,83100,83350,83383,83400,83667,83684,84434,85836,86386,86436,86470,86720,86737,87137,87220,87270,87387,87887,87888,129797,130297,130330,130347,130380,130397,130414,130447,130464,130497,130514,130547,130564,130614,130630,130647,130664,130681,130712,130713,130714,130831,130864,131098,131515,131665,131682,132049,132699,133467,133517,133533,133600,133617,134201,134434,134468,134718,134735,135252,135285,135385,135885,135886,136670,137170,137220,137237,137254,137304,137321,137354,137371,137421,137437,137471,137487,137504,137521,137571,137771,137921,137938,137988,138238,138271,138538,138555,138572,138588,139039,140223,140240,140257,140273,140524,140640,141274,141291,141325,141575,141591,142109,142242,142742,142743,143494,143994,144027,144077,144094,144127,144144,144194,144211,144244,144261,144294,144311,144328,144344,144361,144378,144426,144427,144428,144544,144578,144845,145078,145095,145312,145379,145395,145679,146463,147547,147998,148148,148181,148432,148448,148982,149099,149599,149600,150351,150851,150901,150951,150967,150984,151018,151034,151068,151084,151118,151134,151168,151184,151218,151234,151251,151284,151418,151451,151785,151952,151968,152085,152235,152252,152402,152569,152919,153053,153086,153637,153654,153670,154921,155005,155022,155288,155322,155822,155856,155956,156456,156457,157224,157724,158592,158608,158642,158675,158709,158925,159076,159126,159242,159326,162045,162079,162195,162229,162813,162829,162896,162913,162929,162946,162979,162996,163013,163030,163046,163063,164848,164862,164863,164865,165232,165415,165432,165465,165515,165649,165666,165682,165716,165749,167184,167250,167284,167384,167401,167434,167534,167551,167567,168902,168935,169052,169069,169086,169119,169169,169186,169720,169736,169770,169786,169803,169807,169808,169820,169836,169853,169903,169920,171705,171722,172472,172489,172522,172656,176109,176126,176460,176526,176543,176576,176593,176610,176626,176643,176677,176693,176710,176743,176777,178545,178559,178560,178562,179029,179196,179262,179346,179396,179429,179463,179513,179529,179546,179579,180681,180714,181098,181148,181181,181214,182783,182799,182833,182866,182899,182916,183316,183383,183883,183884,184635,185135,185152,185202,185218,185235,185268,185285,185319,185335,185369,185385,185435,185452,185485,185502,185519,185567,185568,185569,185702,185736,185986,186420,186520,186536,186853,188355,189272,189289,189573,189589,189956,190090,190223,190240,190740,190741,191492,191992,192025,192042,192059,192092,192109,192125,192142,192175,192192,192242,192259,192292,192309,192342,192426,192559,192576,193076,193193,193377,193393,193427,193710,194161,194194,194294,194778,194795,194811,195379,195495,196129,196146,196430,196446,196830,196930,196947,197097,197597,197598,198349,198849,198865,198899,198949,198965,198999,199016,199049,199066,199099,199116,199149,199166,199199,199216,199280,199281,199282,199666,199933,199950,200233,200250,200534,200917,202102,202219,202235,202252,202302,202319,202352,202369,202986,203003,203286,203320,203737,203804,203887,203954,204454,204455,205206,205706,205707,205708,205739,205756,205806,205822,205856,205872,205922,205939,205972,205989,206023,206039,206073,206089,206106,206139,206289,206807,206823,207107,207124,207307,207541,207908,208859,208875,208959,209843,209860,210143,210160,210677,210711,210777,210783,210784,210794,210804,210805,210811,211311,211312}
const int16 angles[] = {-1,185,185,205,222,226,241,254,261,266,276,281,290,304,312,318,320,328,334,359,359,0,6,6,8,16,28,38,40,48,52,73,96,118,132,140,142,152,154,163,162,165,173,176,178,178,356,358,346,338,328,320,305,292,279,268,258,244,234,224,218,213,198,193,180,175,172,166,156,154,152,142,140,134,130,131,114,72,42,40,36,36,34,34,28,26,10,2,0,2,359,184,186,190,210,222,239,252,264,274,285,294,304,314,318,320,334,346,359,0,0,9,18,26,28,38,40,48,73,90,85,86,0,359,322,322,359,0,103,122,138,140,142,152,154,170,178,178,356,354,350,328,316,300,286,275,264,254,246,236,227,222,220,212,206,196,180,174,172,163,154,150,142,139,126,98,84,90,82,67,68,66,42,40,37,28,26,16,17,12,8,5,2,2,-1,208,208,210,208,210,208,210,208,209,210,210,208,210,210,210,209,210,209,208,211,209,210,211,210,210,210,210,208,210,209,210,205,197,191,188,180,172,165,148,148,0,359,332,331,328,343,349,352,359,0,0,8,15,32,32,208,208,200,196,190,183,176,172,164,158,146,148,148,0,359,331,331,331,-1,182,182,192,208,212,227,242,256,267,278,288,298,306,316,322,332,343,347,359,0,0,9,17,26,28,38,40,50,74,78,88,79,110,110,112,114,118,120,138,140,142,152,154,173,180,180,-1,350,350,330,318,301,288,276,265,254,246,232,222,220,214,205,180,170,164,154,154,150,146,145,144,142,140,124,110,60,42,40,38,28,26,8,4,2,2,-1,195,195,212,218,233,248,254,266,278,288,302,312,316,319,328,333,342,359,0,0,6,8,16,26,28,38,40,66,78,88,79,104,138,140,142,152,173,179,179,-1,359,359,350,329,318,301,288,276,266,256,246,236,228,220,212,207,196,181,175,172,164,154,154,152,142,140,112,60,42,40,37,28,26,12,8,4,2,2,-1,182,182,196,204,216,224,240,254,266,276,286,296,306,320,328,331,343,347,359,0,0,6,8,16,32,38,40,54,78,106,106,282,282,112,132,140,143,152,154,172,175,178,178,-1,344,344,329,322,308,286,274,263,254,238,229,222,212,208,199,180,170,166,164,163,154,150,142,140,140,138,122,78,78,88,76,66,62,40,40,37,28,26,8,2,2,-1,182,182,195,211,222,238,252,269,280,290,299,308,318,320,324,334,339,359,0,0,6,8,17,26,28,36,38,40,50,80,120,136,140,143,152,154,173,178,178,-1,357,357,342,318,312,298,285,274,263,254,244,234,226,218,207,198,194,180,175,172,160,154,152,148,142,140,134,128,116,110,110,89,90,88,42,40,38,28,26,8,5,2,2,-1,208,208,210,208,210,210,208,210,208,210,208,209,208,210,208,210,208,212,198,191,188,180,172,166,162,154,154,148,148,0,359,332,331,331,330,332,330,332,330,332,330,332,331,330,332,330,332,330,331,328,330,332,330,332,330,332,330,332,330,332,339,346,354,358,359,0,4,10,12,34,32,32,208,208,210,208,210,208,210,208,208,212,208,202,198,192,188,176,172,166,158,148,148,0,359,332,330,332,330,332,332,330,332,330,332,330,332,330,331,331,330,332,330,332,330,330,332,328,332,330,332,332,-1,182,182,189,204,210,220,237,250,262,273,284,294,307,316,324,334,339,359,0,0,6,8,17,34,38,40,52,108,140,142,152,154,166,173,178,178,178,-1,358,358,347,344,338,318,312,304,290,278,267,252,242,232,222,215,180,174,172,154,148,142,139,138,128,112,110,108,89,90,88,66,62,40,38,28,26,13,8,6,1,1,-1,180,180,186,200,216,231,246,258,270,280,290,300,308,318,324,334,359,0,0,16,26,28,38,40,50,64,108,110,190,190,198,191,191,118,140,142,152,154,170,173,177,179,179,-1,0,0,0,359,349,340,322,308,294,280,264,254,244,236,226,218,207,198,194,180,173,154,152,142,140,132,124,110,76,74,72,40,38,28,26,8,5,2,0,359,355,359,0,2,2,-1}
int maxIdx = 887;
int bpm=140;
int ribbon_offset=0;

//deadzone for autoswirl set negative to disable
int deadzone=5;
int ms=0;
int ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=0;

init {
	beat_anticipate=60000/(bpm*4);
}

main {
	ms+=get_rtime();
	if (get_val(XB1_VIEW)>0 && event_press(XB1_A)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=1;
		putc_oled(1,82);
		putc_oled(2,117);
		putc_oled(3,110);
		puts_oled(40,20,2,3,1);
	}
	if (event_press(XB1_B)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=0;
		putc_oled(1,83);
		putc_oled(2,116);
		putc_oled(3,111);
		putc_oled(4,112);
		puts_oled(30,20,2,4,1);
	}
	if (event_press(XB1_RB)) {ribbon_offset = ribbon_offset + 25;set_val(TRACE_1,ribbon_offset);}
	if (event_press(XB1_LB)) {ribbon_offset = ribbon_offset - 25;set_val(TRACE_1,ribbon_offset);}
	
	if (running) {
		set_val(TRACE_2,ms);
		ms_ribbon = ms + ribbon_offset;
		//advance until we reach the end or catch up with the time code
		while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
			idx++;
		}
		//if we've reached the end of the ribbon, releast LS
		if (idx>=maxIdx || angles[idx]== -1) {
			curAngle=-1;
		} else {
			curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
		}
		//set LS position if ribbon present
		if (curAngle>=0) set_polar(POLAR_LS,curAngle,32767);

		//shoot if we are on the beat
		if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
			next_beat+=1;
			combo_run(fire);
		}

		//swirl reticle if idle
		if (event_press(XB1_X)) {if (autoswirl==0) {autoswirl=1} else {autoswirl=0}}
		if (autoswirl==1 && get_val(XB1_RX)<=deadzone && get_val(XB1_RY)<=deadzone && get_val(XB1_RX)>=-deadzone && get_val(XB1_RY)>=-deadzone) {set_polar(POLAR_RS,ms%360,32767);}
	}
}

combo fire {
	set_val(XB1_RT,100);wait(50);
}