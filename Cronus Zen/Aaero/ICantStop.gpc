const int32 times[] = {0,26944,27444,27544,27561,27611,27644,27711,27761,27794,27811,27861,27928,27978,28061,28178,28195,28295,28579,28612,28629,28645,28695,29913,29926,29927,29930,30731,30861,30862,30864,30948,30964,30981,30998,31031,31048,31114,31164,31215,31231,31281,31356,31357,31381,31431,31448,31515,31598,31615,31648,31665,31682,31713,31714,31715,32015,32032,32049,32065,32082,32099,32115,32332,33166,33851,34201,34218,34368,34401,34418,34434,34468,34501,34601,34618,34635,34651,34668,34718,34818,34835,34852,34918,34935,35002,35035,35085,35102,35152,35435,35469,35485,35502,35519,35536,36770,36783,36784,36787,36870,36904,37137,37171,37571,37718,37719,37721,37821,37838,37888,37905,38021,38038,38105,38155,38188,38189,38222,38255,38305,38338,38372,38472,38505,38522,38555,38570,38571,38572,38856,38889,38906,38922,38956,38972,40023,40523,40524,40641,41141,41258,41275,41291,41308,41358,41375,41475,41491,41508,41542,41575,41675,41725,41742,41792,41859,41892,42009,42276,42326,42342,42359,42376,42409,43644,43656,43657,43660,44444,44575,44576,44578,44661,44678,44695,44711,44728,44761,44778,44878,44928,44995,45062,45070,45071,45112,45195,45229,45329,45345,45412,45426,45427,45429,45712,45762,45779,45796,45812,45846,46880,47114,47764,47781,48065,48115,48165,48198,48232,48332,48348,48365,48382,48432,48515,48532,48565,48582,48599,48632,48649,48749,48782,48866,49149,49183,49199,49216,49233,49266,49633,49650,49783,50484,50497,50498,50501,50584,50601,51301,51432,51433,51435,51535,51552,51568,51585,51635,51702,51735,51768,51802,51852,51952,51956,51957,51969,51985,52002,52019,52085,52186,52202,52219,52252,52286,52302,52303,52319,52569,52619,52636,52653,52669,52703,53737,54421,54771,54788,54938,54972,55005,55072,55138,55172,55222,55289,55973,55989,57624,57641,58141,58143,58144,58308,59409,59414,59415,59426,60611,61261,61662,61678,61712,61778,61812,61845,61895,61929,61962,62829,62846,64481,64498,64998,65000,65001,65165,66266,66271,66272,66283,67234,67451,67951,67952,68069,68569,69686,69703,69837,69853,71338,71355,71855,71857,71858,72022,73123,73128,73129,73140,74525,75025,75026,82633,83133,83550,83567,83634,83650,83667,83734,83800,84835,85335,85336,86053,86553,86970,87004,87020,87054,87070,87087,87137,87187,87221,87771,87804,87855,88238,88738,88739,89507,90007,90374,90407,90507,90524,90531,90532,90557,90574,90624,90657,91675,92175,92176,92910,93410,93810,93827,93844,93877,93894,93911,93927,93961,93977,94011,94027,94077,94611,94661,94695,94711,95095,95595,95596,96364,96864,97281,97297,97314,97347,97364,97481,97497,98532,98582,98699,98949,98999,99349,99366,99399,100150,100267,100684,100717,100751,100784,101969,102469,102470,103204,103704,104121,104137,104204,104238,104248,104249,104304,104321,104371,105389,105889,105890,136604,137104,137204,137221,137237,137321,137421,137471,137487,137521,137588,137638,137654,137671,137704,137721,137838,137855,137938,137955,138255,138272,138288,138305,138322,138355,139573,139586,139587,139590,140007,140090,140107,140374,140521,140522,140524,140624,140641,140657,140674,140707,140724,140774,140824,140874,140891,140941,141041,141045,141046,141058,141175,141275,141291,141308,141369,141370,141375,141692,141708,141725,141742,141758,141775,142476,142826,142943,143026,143043,143994,144011,144278,144294,144328,144378,144478,144511,144528,144578,144595,144695,144728,144761,144795,145095,145128,145179,145212,146446,146459,146460,146463,147231,147378,147379,147381,147431,147432,147481,147481,147482,147497,147514,147531,147548,147564,147664,147681,147714,147731,147798,147898,147906,147907,147915,147948,148031,148131,148182,148198,148230,148231,148232,148515,148565,148599,148615,148649,149683,150183,150184,150317,150817,150918,150934,150951,150968,151034,151134,151151,151185,151235,151318,151351,151385,151401,151451,151535,151552,151668,151935,151985,152002,152019,152035,152069,153287,153300,153301,153303,154087,154235,154236,154238,154338,154354,154371,154388,154404,154421,154538,154571,154588,154655,154671,154721,154722,154771,154788,154805,154905,154988,155005,155022,155038,155055,155086,155087,155088,155372,155422,155455,155472,155506,156540,156773,157658,157674,157774,157824,157841,157891,157958,157991,158025,158041,158091,158158,158208,158242,158292,158392,158408,158425,158442,158475,158525,158825,158842,158859,158876,158892,158909,158942,160160,160173,160174,160177,160961,161091,161092,161094,161195,161211,161228,161245,161278,161295,161361,161395,161445,161461,161528,161595,161603,161604,161628,161745,161812,161862,161943,161944,161945,162262,162296,162329,162346,162379,163046,163063,163080,163397,163630,164565,164581,164798,164831,164848,164882,164948,165632,165649,167284,167301,167801,167803,167804,167968,169052,169057,169058,169069,169820,170070,171321,171338,171371,171538,171588,172489,172506,172639,172673,174141,174157,174658,174660,174661,174808,175943,175950,175951,175959,177110,177610,177611,177728,178228,179346,179363,180998,181013,181014,181014,181231,181248,181249,181265,181515,181517,181518,181682,182799,182806,182807,182816,184184,184684,184685,192293,192793,193210,193227,193260,193277,193310,193343,193393,193410,193460,193493,194494,194994,194995,195713,196213,196647,196663,196697,196730,196747,196797,196813,196830,196880,197431,197464,197514,197898,198398,198399,199150,199650,200050,200083,200117,200133,200167,200184,200191,200192,200217,200234,200267,200317,201335,201835,201836,202570,203070,203487,203537,203554,203570,203604,203670,203687,203737,204288,204321,204371,204755,205255,205256,206023,206523,206940,206957,206974,207090,207140,207157,208192,208242,208358,208575,208659,209009,209026,209059,209810,209927,210344,210360,210377,210394,210427,211628,212128,212129,212880,213380,213780,213797,213847,213864,213915,213916,213931,213947,213964,214031,215065,215565,215566}
const int16 angles[] = {-1,180,180,181,188,198,208,208,206,198,192,180,180,174,148,149,156,180,180,176,168,152,120,120,0,359,332,332,359,0,0,2,2,6,13,19,32,32,27,17,12,1,0,359,359,350,345,332,332,333,342,347,350,359,0,0,1,2,10,22,30,42,62,61,62,90,90,180,180,183,186,192,198,208,208,207,204,196,194,180,178,174,168,153,148,149,151,162,170,180,180,175,162,156,146,120,120,0,359,333,333,332,332,330,332,359,0,0,2,8,22,32,30,23,9,0,0,359,359,357,347,338,330,333,340,346,355,359,0,0,0,4,12,21,44,60,61,61,-1,180,180,180,188,192,194,206,208,207,203,196,189,180,180,168,160,148,148,151,180,180,172,166,152,144,120,120,0,359,330,332,359,0,0,1,2,6,12,16,34,32,30,16,0,0,0,359,357,340,332,331,338,356,359,0,0,0,10,16,32,45,61,61,90,90,180,180,184,194,202,208,207,203,196,194,180,179,178,170,164,161,146,148,149,160,180,179,178,162,156,146,120,118,107,120,120,0,359,329,329,332,331,359,0,0,2,4,12,16,32,31,29,22,11,0,0,0,359,358,354,348,346,332,332,336,343,349,359,359,0,0,0,12,18,32,45,61,62,90,90,180,179,178,166,148,149,151,161,180,180,120,120,0,0,0,359,332,332,359,0,61,62,90,90,149,149,159,162,168,175,181,180,180,120,120,0,0,0,359,331,332,359,0,62,61,60,60,-1,180,180,180,118,118,120,120,0,0,0,359,331,332,359,0,61,61,61,-1,148,148,149,150,168,172,180,194,208,208,208,-1,120,120,119,126,131,136,144,146,159,171,180,180,172,148,148,148,-1,32,32,32,34,6,1,0,359,354,348,339,332,332,332,-1,60,60,60,63,56,50,45,42,35,30,23,16,10,0,0,15,34,32,32,32,-1,148,148,150,151,156,158,162,177,180,180,185,208,208,239,239,240,239,239,270,270,292,311,332,332,332,-1,32,32,30,30,14,2,0,359,346,341,331,332,332,-1,180,180,180,184,192,208,207,194,188,179,180,174,170,166,154,149,147,156,175,180,180,181,164,158,136,119,120,0,359,332,333,334,332,332,359,0,0,2,5,12,16,34,32,32,27,18,11,0,0,0,359,358,332,331,335,342,359,0,1,0,8,22,30,42,62,62,61,18,18,90,90,208,209,202,194,180,180,172,164,153,148,149,160,168,180,180,176,148,120,120,0,359,332,332,359,0,0,0,359,359,359,0,8,10,18,20,32,30,29,22,15,0,0,0,359,359,351,332,331,346,349,359,0,0,0,12,26,48,61,61,61,-1,180,180,180,187,192,194,208,209,202,194,179,178,176,168,160,148,149,150,180,180,173,166,154,144,120,120,0,359,332,332,359,0,0,0,4,12,15,26,32,31,22,16,3,0,0,359,359,356,350,332,332,336,343,347,349,359,0,0,0,8,24,46,61,61,90,90,184,184,194,200,208,208,206,200,193,180,180,174,166,149,149,150,154,157,168,180,178,178,170,155,145,132,120,120,0,359,332,332,359,0,0,2,5,12,16,34,32,30,28,18,12,0,0,0,359,358,331,331,336,359,0,0,0,18,42,60,61,61,66,61,61,90,90,148,148,146,154,161,180,180,120,120,0,0,0,359,332,332,359,0,61,61,90,90,150,150,172,180,180,118,118,120,120,1,0,0,359,332,332,359,0,32,32,32,-1,180,180,180,120,120,0,359,359,359,359,0,0,0,0,359,332,332,359,0,32,32,32,-1,149,149,150,150,157,164,172,182,194,200,210,208,208,208,-1,120,120,120,126,132,143,146,158,162,169,180,180,164,148,148,148,-1,32,32,31,30,21,15,9,1,0,359,354,348,342,332,332,332,-1,62,62,62,52,46,43,33,18,12,0,0,16,32,32,32,-1,148,148,149,150,154,170,178,180,180,184,208,208,239,239,240,239,239,270,270,278,289,307,332,332,332,-1,32,32,31,30,18,11,0,359,356,348,346,332,332,332,-1}
int maxIdx = 886;
int bpm=140;
int ribbon_offset=0;

//deadzone for autoswirl set negative to disable
int deadzone=5;
int ms=0;
int ms_ribbon=0;
int running=0;

int idx=0;
int curAngle=-1;

int next_beat=0;
int beat_anticipate=0;
int autoswirl=0;

init {
	beat_anticipate=60000/(bpm*4);
}

main {
	ms+=get_rtime();
	if (get_val(XB1_VIEW)>0 && event_press(XB1_A)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=1;
		putc_oled(1,82);
		putc_oled(2,117);
		putc_oled(3,110);
		puts_oled(40,20,2,3,1);
	}
	if (event_press(XB1_B)) {
		ms=0;
		idx=0;
		next_beat=0;
		cls_oled(0);
		running=0;
		putc_oled(1,83);
		putc_oled(2,116);
		putc_oled(3,111);
		putc_oled(4,112);
		puts_oled(30,20,2,4,1);
	}
	if (event_press(XB1_RB)) {ribbon_offset = ribbon_offset + 25;set_val(TRACE_1,ribbon_offset);}
	if (event_press(XB1_LB)) {ribbon_offset = ribbon_offset - 25;set_val(TRACE_1,ribbon_offset);}
	
	if (running) {
		set_val(TRACE_2,ms);
		ms_ribbon = ms + ribbon_offset;
		//advance until we reach the end or catch up with the time code
		while (idx<maxIdx && ms_ribbon>times[idx + 1]) {
			idx++;
		}
		//if we've reached the end of the ribbon, releast LS
		if (idx>=maxIdx || angles[idx]== -1) {
			curAngle=-1;
		} else {
			curAngle=angles[idx]+(angles[idx + 1]-angles[idx])*(ms_ribbon-times[idx])/(times[idx + 1]-times[idx]);
		}
		//set LS position if ribbon present
		if (curAngle>=0) set_polar(POLAR_LS,curAngle,32767);

		//shoot if we are on the beat
		if ((ms+beat_anticipate)>((next_beat*2*60000)/bpm)) {
			next_beat+=1;
			combo_run(fire);
		}

		//swirl reticle if idle
		if (event_press(XB1_X)) {if (autoswirl==0) {autoswirl=1} else {autoswirl=0}}
		if (autoswirl==1 && get_val(XB1_RX)<=deadzone && get_val(XB1_RY)<=deadzone && get_val(XB1_RX)>=-deadzone && get_val(XB1_RY)>=-deadzone) {set_polar(POLAR_RS,ms%360,32767);}
	}
}

combo fire {
	set_val(XB1_RT,100);wait(50);
}