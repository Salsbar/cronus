//FOR TITAN TWO USERS, UNCOMMENT LINES 2 AND 3 (REMOVE THE DOUBLE SLASHES).
//#include <titanone.gph>
//#pragma METAINFO("Gold Grinding", 2, 0, "XxFrAsZeRxX")

//Created by XxFrAsZeRxX
//If there are issues with the script message me on Discord (XxFrAsZeRxX#8948).

/*
Game: Castlestorm - Definitive Edition
Platform: Xbox One
Use: Generating gold to upgrade weapons

Go to the single player campaign, select the Kingdom Quest campaign.
Go to the Ore Mine - Need for Steel missions. Select "Frenzy Battle!"
With "Start Battle" highlighted click LS to start the script.
Click back to stop the script.

*IMPORTANT*
Make sure Tri-Stone is in the right-most slot.
The script requires that the variable time_adjust (on line 55) be altered in correspondance with the level of Tri-Stone.
Tested Tri-Shot levels with corresponding variable values below. However not all levels have been tested so do not all have a set value.
If your current level does not have a value rank it up using gold, or experiment by changing the variable number in increments of 5 or 10.

If you wish to experiment and find out missing values:
If the level is not completed before the projectiles stop firing the value must be increased.
If the level is completed and does not restart the mission but instead continues to the next mission the number must be decreased.
If new values are found that have "TBD" in the table below message me on Discord at XxFrAsZeRxX#8948 or push a change to the GitHub.


+-------+-------------------+-------+-------------------+
| Level | time_adjust value | Level | time_adjust value |
+-------+-------------------+-------+-------------------+
|   1   |        TBD        |   11  |        160        |
+-------+-------------------+-------+-------------------+
|   2   |        TBD        |   12  |        140        |
+-------+-------------------+-------+-------------------+
|   3   |        TBD        |   13  |        130        |
+-------+-------------------+-------+-------------------+
|   4   |        TBD        |   14  |        TBD        |
+-------+-------------------+-------+-------------------+
|   5   |        TBD        |   15  |        TBD        |
+-------+-------------------+-------+-------------------+
|   6   |        TBD        |   16  |        TBD        |
+-------+-------------------+-------+-------------------+
|   7   |        170        |   17  |        TBD        |
+-------+-------------------+-------+-------------------+
|   8   |        170        |   18  |        TBD        |
+-------+-------------------+-------+-------------------+
|   9   |        170        |   19  |        TBD        |
+-------+-------------------+-------+-------------------+
|   10  |        160        |   20  |        TBD        |
+-------+-------------------+-------+-------------------+
*/
int i, j;
int time_adjust = 130;
main
{
	if(get_val(XB360_LS))
	{
		i = 1;
	}
	if(get_val(XB360_BACK))
	{
		i = 0;
	}
	if(i==1)
	{
		combo_run(start)
	}
	if(i==2)
	{
		combo_run(win);
		if(j>=time_adjust)
		{
			i = 3;
			j = 0;
		}
	}
	if(i==3)
	{
		combo_run(reset);
	}
	if(i==0)
	{
		combo_stop(start);
		combo_stop(win);
		combo_stop(reset);
	}
}

combo start
{
	set_val(XB360_A, 100);
	wait(50);
	set_val(XB360_A, 0);
	wait(5000);
	set_val(XB360_B, 100);
	wait(50);
	set_val(XB360_B, 0);
	wait(5000);
	set_val(XB360_RB, 100);
	wait(50);
	set_val(XB360_RB, 0);
	wait(50);
	set_val(XB360_RB, 100);
	wait(50);
	set_val(XB360_RB, 0);
	wait(50);
	set_val(XB360_RB, 100);
	wait(50);
	set_val(XB360_RB, 0);
	wait(50);
	set_val(XB360_RB, 100);
	wait(50);
	set_val(XB360_RB, 0);
	wait(50);
	set_val(XB360_LX, 100);
	wait(50);
	i = i + 1;
}

combo win
{
	set_val(XB360_LX, 89);
	set_val(XB360_LY, -70);
	set_val(XB360_A, 100);
	wait(50);
	set_val(XB360_LX, 89);
	set_val(XB360_LY, -70);
	set_val(XB360_A, 0);
	wait(50);
	j = j + 1;
}

combo reset
{
	wait(10000);
	set_val(XB360_Y, 100);
	wait(50);
	set_val(XB360_Y, 0);
	wait(5000);
	set_val(XB360_Y, 100);
	wait(50);
	set_val(XB360_Y, 0);
	wait(1000);
	set_val(XB360_Y, 100);
	wait(50);
	set_val(XB360_Y, 0);
	wait(1000);
	set_val(XB360_Y, 100);
	wait(50);
	set_val(XB360_Y, 0);
	wait(1000);
	i = 1;
}
